{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\nimport { objectTypeSpreadProperty, nullLiteral, breakStatement } from '@babel/types';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.globalContracts = [];\n    this.globalContractIds = [];\n    this.globalNames = [];\n    this.globalArray = [];\n    this.bigObj = [];\n    this.globalNamesLength = \"\";\n    this.putIndex = [];\n    this.market_ids = [];\n    this.marketIds = [];\n    this.state = {\n      active: false,\n      contracts: [],\n      contractNames: [],\n      contractIds: [],\n      contractPrices: [],\n      globalNames: [],\n      globalPrices: []\n    };\n    this.createContracts = this.createContracts.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  getContractPrices() {\n    // check contractIds array -- see if they're all there\n    console.log('this.globalContractIds -- BEFORE valuesLoop() begins...', this.globalContractIds);\n    console.log('this.globalArray -- BEFORE valuesLoop() begins...', this.globalArray); // checked!\n\n    const idsArray = this.globalContractIds;\n    console.log('idsArray TIP TOP of getContractPrices', idsArray);\n    this.values = idsArray.forEach((array, index) => {\n      //console.log('array', array)\n      axios.get('http://localhost:3002/api/value/value_list/' + array).then(res => {\n        let priceGroupings = {\n          \"contract_id\": array,\n          \"contractPrice\": res.data[0][0].best_buy_yes_offer,\n          \"contractChange\": (res.data[0][0].last_trade_price - res.data[0][0].last_close_price).toFixed(2)\n        };\n        this.globalArray.push(priceGroupings);\n      }); // end of prices call\n    });\n  }\n\n  async componentDidMount() {\n    this.marketIds.push(this.props.mId1Title);\n    console.log('this.marketIds', this.marketIds);\n    this.marketIds.map((Id, index) => {\n      //Get contracts\n      axios.get('http://localhost:3002/api/contract/contract_list/' + Id).then(res => {\n        // this.setState({ contracts: res.data[0] });\n        console.log('res.data[0] NO IDs in Global Contracts', res.data[0]);\n        this.globalContracts.push(res.data[0]);\n        const contracts = this.globalContracts;\n        console.log('contracts[0] how many b4 i run this loop?', contracts[0]);\n        contracts[0].map((contract, index) => {\n          console.log('this.globalContracts[0] BEFORE ADDING TO ARRAY', this.globalContracts[0]);\n          console.log('this.globalContractIds BEFORE ADDING TO ARRAY', this.globalContractIds);\n          this.globalContractIds.push(contract.contract_id);\n          const namesUrls = {\n            \"marketId\": Id,\n            \"name\": contract.name,\n            \"url\": contract.image,\n            \"id\": contract.contract_id\n          };\n          this.globalNames.push(namesUrls);\n          this.globalNamesLength = this.globalNames.length;\n        });\n        console.log('this.globalNames in componentDidMount()', this.globalNames);\n        return;\n      } // something end of call \n      );\n    });\n  }\n\n  createContracts() {\n    //setTimeout(5500)\n    console.log('this.globalContracts[0]', this.globalContracts[0]);\n    console.log('this.globalContracts[0]', this.globalContracts[0]);\n    this.globalNames.map((row, index) => {\n      console.log('row.contract_id', row.id);\n      console.log('this.globalContracts', this.globalContracts);\n      this.globalArray.map((line, k) => {\n        if (row.id === line.contract_id) {\n          if (row.id) {\n            console.log('row.id INSIDE SECOND -- PRICES LOOP', row.id);\n            console.log('line.contract_id INSIDE SECOND -- PRICES LOOP', line.contract_id);\n            const jointObj = {\n              \"name\": row.name,\n              \"url\": row.url,\n              \"contractPrice\": line.contractPrice,\n              \"contractChange\": line.contractChange,\n              \"contract_id\": line.contract_id,\n              \"id\": row.id,\n              \"repeat\": 0\n            };\n            this.bigObj.map((big, d) => {\n              if (big.id === jointObj.id) {\n                console.log('we already got it', big);\n              }\n            });\n            console.log('this.jointObj', jointObj);\n            console.log('this.largeObj', this.largeObj);\n            this.bigObj.push(this.jointObj);\n            console.log('this.bigObj', this.bigObj);\n          } else {\n            breakStatement();\n          }\n        } else {//do nothing\n        }\n      });\n    });\n    console.log('this.bigObj', this.bigObj);\n    /*\n    \n    \n    this.globalArray.map((line, k) => {\n                    if ( index === k) {\n                console.log('row.id INSIDE', row.contract_id)      \n                console.log('line.id INSIDE', line.id)\n                console.log('k', k)\n                console.log('index', index)\n               \n               \n              \n                \n    \n                const jointObj = {\"name\": row.name, \"url\": row.url, \"contractPrice\": line.contractPrice, \"contractChange\": line.contractChange, \"contract_id\": line.contract_id, \"id\": row.id, \"repeat\": 0}\n                console.log('this.jointObj', jointObj)\n                this.bigObj.push(jointObj);\n                \n                console.log('this.bogObj', this.bigObj);\n               \n            } else {\n                breakStatement();\n            }\n             \n        })\n    \n    \n    \n    */\n\n    console.log('this.bigObj in createContracts().length', this.bigObj.length);\n    console.log('this.bigObj in createContracts()', this.bigObj);\n  } //console.log('this.globalArray prices -- WITHIN createContracts()', this.globalArray)\n  //console.log('this.globalContracts --  WITHIN createContracts()', this.globalContracts)\n  //console.log('this.globalNames --  WITHIN createContracts()', this.globalNames)\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        progress,\n        setCollapsibleElement,\n        range\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        onClick: toggle,\n        onChange: this.getContractPrices(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        onClick: this.createContracts(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.bigObj.map((obj, index) => {\n        const name = obj.name;\n        const url = obj.url;\n        const price = obj.contractPrice;\n        const change = obj.contractChange;\n        return React.createElement(LiveContracts, {\n          key: index,\n          contractName: name,\n          contractAvatar: url,\n          contractPrice: price,\n          contractChange: change,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        });\n      }), React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","objectTypeSpreadProperty","nullLiteral","breakStatement","LiveMarkets","Component","constructor","props","globalContracts","globalContractIds","globalNames","globalArray","bigObj","globalNamesLength","putIndex","market_ids","marketIds","state","active","contracts","contractNames","contractIds","contractPrices","globalPrices","createContracts","bind","componentDidMount","getContractPrices","console","log","idsArray","values","forEach","array","index","get","then","res","priceGroupings","data","best_buy_yes_offer","last_trade_price","last_close_price","toFixed","push","mId1Title","map","Id","contract","contract_id","namesUrls","name","image","length","row","id","line","k","jointObj","url","contractPrice","contractChange","big","d","largeObj","render","toggle","progress","setCollapsibleElement","range","contractName","obj","price","change"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\nimport { objectTypeSpreadProperty, nullLiteral, breakStatement } from '@babel/types';\n\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        active: false,\n        contracts: [],\n        contractNames: [],\n        contractIds: [],\n        contractPrices: [],\n        globalNames: [],\n        globalPrices: []\n      \n\n\n    };\n\n    this.createContracts = this.createContracts.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n\n  \n  }\n\n  globalContracts = [];\n  globalContractIds = [];\n  globalNames = [];\n  globalArray = [];\n  bigObj= [];\n  globalNamesLength = \"\" \n  putIndex = [];\n  market_ids = [];\n  marketIds = [];\n\n\n  getContractPrices(){\n    // check contractIds array -- see if they're all there\n    console.log('this.globalContractIds -- BEFORE valuesLoop() begins...', this.globalContractIds);\n    console.log('this.globalArray -- BEFORE valuesLoop() begins...', this.globalArray);\n    // checked!\n\n    const idsArray = this.globalContractIds\n    console.log('idsArray TIP TOP of getContractPrices', idsArray)\n    this.values = idsArray.forEach((array, index) => {\n       \n\n        //console.log('array', array)\n       \n        axios.get('http://localhost:3002/api/value/value_list/' + array).then(res =>{\n\n        let priceGroupings = {\"contract_id\": array, \"contractPrice\": res.data[0][0].best_buy_yes_offer, \"contractChange\": (res.data[0][0].last_trade_price - res.data[0][0].last_close_price).toFixed(2)}\n        this.globalArray.push(priceGroupings)\n        \n    \n        \n     \n\n    \n        \n    \n    }) \n    // end of prices call\n  \n    });\n    }\n\n  \n\n   async componentDidMount() {\n    \n   \n    \n    this.marketIds.push(this.props.mId1Title)\n    console.log('this.marketIds', this.marketIds)\n\n    this.marketIds.map((Id, index)=>{\n\n           //Get contracts\n   axios.get('http://localhost:3002/api/contract/contract_list/'+ Id).then(res => { \n    // this.setState({ contracts: res.data[0] });\n    console.log('res.data[0] NO IDs in Global Contracts', res.data[0])\n    this.globalContracts.push(res.data[0])\n    const contracts = this.globalContracts\n    console.log('contracts[0] how many b4 i run this loop?', contracts[0])\n\n    contracts[0].map((contract, index) => {\n        \n        console.log('this.globalContracts[0] BEFORE ADDING TO ARRAY', this.globalContracts[0])\n        console.log('this.globalContractIds BEFORE ADDING TO ARRAY', this.globalContractIds)\n         this.globalContractIds.push(contract.contract_id)\n         const namesUrls = {\"marketId\": Id,\"name\": contract.name, \"url\": contract.image, \"id\": contract.contract_id }\n         this.globalNames.push(namesUrls)\n         this.globalNamesLength = this.globalNames.length\n\n        \n    }\n    )\n    console.log('this.globalNames in componentDidMount()', this.globalNames)\n    return ;\n    \n}\n\n// something end of call \n\n);\n        \n    })\n\n\n    }\n\n\n\n\n\n  createContracts() {\n\n   //setTimeout(5500)\n  \n  console.log('this.globalContracts[0]', this.globalContracts[0])\n  console.log('this.globalContracts[0]', this.globalContracts[0])\n \n    this.globalNames.map((row, index)=>{\n        console.log('row.contract_id', row.id)\n        console.log('this.globalContracts', this.globalContracts)\n\n\n\n        this.globalArray.map((line, k) => {\n            if ( row.id === line.contract_id) {\n                if(row.id){\n        console.log('row.id INSIDE SECOND -- PRICES LOOP', row.id)      \n        console.log('line.contract_id INSIDE SECOND -- PRICES LOOP', line.contract_id)\n        \n      \n        const jointObj = {\"name\": row.name, \"url\": row.url, \"contractPrice\": line.contractPrice, \"contractChange\": line.contractChange, \"contract_id\": line.contract_id, \"id\": row.id, \"repeat\": 0}\n        \n        this.bigObj.map((big, d) => {\n            if (big.id === jointObj.id){\n                console.log('we already got it', big)\n                \n                \n            }\n\n        })\n        \n        console.log('this.jointObj', jointObj)\n        console.log('this.largeObj', this.largeObj)\n        this.bigObj.push(this.jointObj)\n\n        \n        \n        console.log('this.bigObj', this.bigObj);\n       \n       \n    } else {\n        breakStatement();\n    }\n} else {\n    //do nothing\n}\n})\n     \n    \n})\n\n\n  console.log('this.bigObj', this.bigObj);\n \n\n/*\n\n\nthis.globalArray.map((line, k) => {\n                if ( index === k) {\n            console.log('row.id INSIDE', row.contract_id)      \n            console.log('line.id INSIDE', line.id)\n            console.log('k', k)\n            console.log('index', index)\n           \n           \n          \n            \n\n            const jointObj = {\"name\": row.name, \"url\": row.url, \"contractPrice\": line.contractPrice, \"contractChange\": line.contractChange, \"contract_id\": line.contract_id, \"id\": row.id, \"repeat\": 0}\n            console.log('this.jointObj', jointObj)\n            this.bigObj.push(jointObj);\n            \n            console.log('this.bogObj', this.bigObj);\n           \n        } else {\n            breakStatement();\n        }\n         \n    })\n\n\n\n*/\n\n\n    \n\n    \n  \n      \n\n    \n\n\n\n\n\n\n    \n\nconsole.log('this.bigObj in createContracts().length', this.bigObj.length)\nconsole.log('this.bigObj in createContracts()', this.bigObj)\n\n\n\n\n\n}\n\n    //console.log('this.globalArray prices -- WITHIN createContracts()', this.globalArray)\n    //console.log('this.globalContracts --  WITHIN createContracts()', this.globalContracts)\n    //console.log('this.globalNames --  WITHIN createContracts()', this.globalNames)\n\n\n   \n    \n\n\n\n \n\n\nrender() {\n\n \n  return (\n         <div className=\"parent\">\n             <div className=\"one\">\n                 \n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      progress,\n      setCollapsibleElement,\n      range,\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'} onClick={toggle} onChange={this.getContractPrices()} >\n        \n        <div className=\"LiveMarkets\"  onClick={this.createContracts()}  >\n        {this.props.contractName}\n    \n          </div>\n          <SlideToggle >\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}>\n                  \n               \n               {\n               \n               this.bigObj.map((obj, index) => {\n                const name = obj.name;\n                const url = obj.url;\n                const price = obj.contractPrice;\n                const change = obj.contractChange;\n                return (\n                     \n                            <LiveContracts\n                            key={index}\n                            contractName={name}\n                            contractAvatar={url}\n                            contractPrice={price}\n                            contractChange={change}\n                            \n                         \n                            />\n                )\n\n\n               })\n               }\n\n              \n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n       \n        \n\n   \n\n\n      \n      </div>\n      )}\n    \n      />\n      </div>\n  );\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}