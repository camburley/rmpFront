{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\n\n/* \n\n <LiveContracts \n        avatar={require('../../images/BidenAvatar.png')}\n        contractName=\"Joe Biden\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.14\"\n        priceChange=\"0.2\" \n        />\n         <LiveContracts \n        avatar={require('../../images/BernieAvatar.png')}\n        contractName=\"Bernie Sanders\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.06\"\n        priceChange=\"0.3\" \n        />\n         <LiveContracts \n        avatar={require('../../images/ButtigeigAvatar.png')}\n        contractName=\"Pete Buttigeig\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.05\"\n        priceChange=\"0.1\" \n        />\n         <LiveContracts \n        avatar={require('../../images/WarrenAvatar.png')}\n        contractName=\"Elizabeth Warren\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.03\"\n        priceChange=\"0.1\" \n        />\n\n\n\n\n*/\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleActive = () => {\n      this.setState({\n        active: !this.state.active\n      });\n    };\n\n    this.state = {\n      active: false,\n      data: [],\n      mId1: '2721',\n      contractIds: [],\n      contractPrices: [],\n      activeArray: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3002/api/contract/contract_list/' + this.props.mId1Title).then(res => {\n      console.log('response', res.data);\n      this.setState({\n        data: res.data[0]\n      });\n      const datas = this.state.data;\n      datas.map((data, index) => {\n        this.state.contractIds.push(data.contract_id);\n        console.log('contractIds', this.state.contractIds);\n        console.log('this.state.data', this.state.data);\n        const cName = data.name;\n        const cAvatar = data.image;\n        const ids = this.state.contractIds;\n        axios.get('http://localhost:3002/api/value/value_list/' + ids[index]).then(res => {\n          this.setState({\n            contractPrices: res.data[0]\n          });\n          this.afunction();\n          this.state.activeArray.push(cName, cAvatar);\n          console.log('this.state.activeArray', this.state.activeArray);\n          return console.log('contract prices', this.state.contractPrices);\n        });\n      }); //console.log('this.state.data', this.state.data)\n    });\n  }\n\n  afunction() {\n    const contractRow = this.state.contractPrices;\n    contractRow.map((row, index) => {\n      const lastTrade = row.last_trade_price;\n      const lastClose = row.last_close_price;\n      const priceDiff = (lastClose - lastTrade).toFixed(2);\n      const priceSwap = (lastClose - lastTrade).toFixed(2);\n      const cPrice = lastTrade;\n      const pChange = priceDiff;\n      console.log('row.last_trade_price', lastTrade);\n      console.log('row.last_close_price', lastClose);\n      console.log('priceSwap', priceSwap);\n      return console.log('lastTrade - lastClose', priceDiff);\n    });\n  }\n\n  render() {\n    const activeContracts = [{\n      avatar: require(\"../../images/KamalaAvatar.png\"),\n      contractName: \"Kamala Harris\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.84\",\n      priceChange: \"0.02\"\n    }, {\n      avatar: require(\"../../images/BidenAvatar.png\"),\n      contractName: \"Joe Biden\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.02\"\n    }, {\n      avatar: require(\"../../images/BernieAvatar.png\"),\n      contractName: \"Bernie Sanders\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.02\"\n    }, {\n      avatar: require(\"../../images/ButtigeigAvatar.png\"),\n      contractName: \"Pete Buttigeig\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.00\"\n    }, {\n      avatar: require(\"../../images/WarrenAvatar.png\"),\n      contractName: \"Elizabeth Warren\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.02\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        progress,\n        setCollapsibleElement,\n        range\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        onClick: this.props.theToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.props.relevantMarkets.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, activeContracts.map((activeContract, index) => {\n        console.log('this.state.contractIds', this.state.contractIds); //console.log('this the index', index)\n\n        return React.createElement(LiveContracts, {\n          key: index,\n          activeContracts: activeContract,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        });\n      }), React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","LiveMarkets","Component","constructor","props","toggleActive","setState","active","state","data","mId1","contractIds","contractPrices","activeArray","componentDidMount","get","mId1Title","then","res","console","log","datas","map","index","push","contract_id","cName","name","cAvatar","image","ids","afunction","contractRow","row","lastTrade","last_trade_price","lastClose","last_close_price","priceDiff","toFixed","priceSwap","cPrice","pChange","render","activeContracts","avatar","require","contractName","contractLabel","contractPrice","priceChange","toggle","progress","setCollapsibleElement","range","theToggle","relevantMarkets","activeContract"],"mappings":"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","sourcesContent":["/* \n\n <LiveContracts \n        avatar={require('../../images/BidenAvatar.png')}\n        contractName=\"Joe Biden\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.14\"\n        priceChange=\"0.2\" \n        />\n         <LiveContracts \n        avatar={require('../../images/BernieAvatar.png')}\n        contractName=\"Bernie Sanders\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.06\"\n        priceChange=\"0.3\" \n        />\n         <LiveContracts \n        avatar={require('../../images/ButtigeigAvatar.png')}\n        contractName=\"Pete Buttigeig\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.05\"\n        priceChange=\"0.1\" \n        />\n         <LiveContracts \n        avatar={require('../../images/WarrenAvatar.png')}\n        contractName=\"Elizabeth Warren\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.03\"\n        priceChange=\"0.1\" \n        />\n\n\n\n\n*/\n\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\n\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        active: false,\n        data: [],\n        mId1: '2721',\n        contractIds: [],\n        contractPrices: [],\n        activeArray: []\n\n\n    }\n\n \n\n    \n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3002/api/contract/contract_list/'+ this.props.mId1Title)\n    .then(res => {\n        console.log('response', res.data);\n        this.setState({ data: res.data[0] });\n        \n        \n        const datas = this.state.data\n        datas.map((data, index) => {\n        this.state.contractIds.push(data.contract_id)\n        console.log('contractIds', this.state.contractIds)\n        console.log('this.state.data', this.state.data);\n        const cName = data.name;\n        const cAvatar = data.image;\n       \n        \n        \n        \n        const ids = this.state.contractIds\n        axios.get('http://localhost:3002/api/value/value_list/' + ids[index])\n        .then(res => {\n            this.setState({ contractPrices: res.data[0]})\n            \n            this.afunction()\n            this.state.activeArray.push(cName, cAvatar)\n            console.log('this.state.activeArray', this.state.activeArray);\n            return console.log('contract prices', this.state.contractPrices) \n        });\n        })\n        //console.log('this.state.data', this.state.data)\n        \n    }); \n}\n\n    afunction() {\n        const contractRow = this.state.contractPrices\n        contractRow.map(( row, index) => {\n        const lastTrade = row.last_trade_price\n        const lastClose = row.last_close_price\n        const priceDiff = (lastClose - lastTrade).toFixed(2)\n        const priceSwap = (lastClose - lastTrade).toFixed(2)\n        const cPrice = lastTrade;\n        const pChange = priceDiff;\n        \n\n        console.log('row.last_trade_price', lastTrade ) \n        console.log('row.last_close_price', lastClose )\n        console.log('priceSwap', priceSwap )\n\n        return console.log('lastTrade - lastClose', priceDiff )\n        \n            \n        })\n    }\n    \n  \n\n  toggleActive = () => {\n\n      this.setState({ active: !this.state.active })\n  }\n\n \n\n\nrender() {\n\n    const activeContracts = [\n        {\n            avatar: require(\"../../images/KamalaAvatar.png\"),\n            contractName: \"Kamala Harris\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.84\",\n            priceChange: \"0.02\"\n        },\n        {\n            avatar: require(\"../../images/BidenAvatar.png\"),\n            contractName: \"Joe Biden\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.02\"\n        },\n        {\n            avatar: require(\"../../images/BernieAvatar.png\"),\n            contractName: \"Bernie Sanders\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.02\"\n        },\n        {\n            avatar: require(\"../../images/ButtigeigAvatar.png\"),\n            contractName: \"Pete Buttigeig\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.00\"\n        },\n        {\n            avatar: require(\"../../images/WarrenAvatar.png\"),\n            contractName: \"Elizabeth Warren\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.02\"\n        },\n\n    ]\n\n\n\n  return (\n         <div className=\"parent\">\n             <div className=\"one\">\n                 \n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      progress,\n      setCollapsibleElement,\n      range,\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'} onClick={toggle }>\n        \n        <div className=\"LiveMarkets\"  onClick={this.props.theToggle}>\n        {this.props.relevantMarkets.contractName}\n    \n          </div>\n          <SlideToggle>\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}>\n              { \n      \n      activeContracts.map((activeContract, index) => {\n        console.log('this.state.contractIds', this.state.contractIds)\n          //console.log('this the index', index)\n          return <LiveContracts\n          key={index} \n          activeContracts={activeContract}\n         \n          />\n          \n          })           \n    } \n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n       \n        \n\n   \n\n\n      \n      </div>\n      )}\n    \n      />\n      </div>\n  );\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}