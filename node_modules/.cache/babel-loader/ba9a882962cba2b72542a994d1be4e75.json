{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contracts = [];\n    this.values = [];\n    this.markets = [];\n    this.json = [];\n    this.length = \"\";\n    this.state = {\n      toggleSwitch: false,\n      marketIds: this.props.markets,\n      contractIds: [],\n      allContracts: [],\n      marketContracts: [],\n      contractsAndValues: [],\n      onlyValues: [],\n      jsonObj: [],\n      valuesLength: \"\",\n      objLength: [],\n      almostThere: [],\n      currentNames: [],\n      currentPrices: [],\n      loopThruTheseContracts: []\n    }; // END OF STATE\n  } // END OF CONSTRUCTOR\n\n\n  //Notes: \n  // Need to Get all Market Ids thru props\n  // Need to get all Contracts where Market Ids exist\n  // Need to get all Values where Contract Ids exist \n  // One JSON object to map Contracts and Values\n  // Loop thru JSON, render values in <LiveContracts /> component\n  componentDidMount() {\n    let marketIds = ['3633', '3653'];\n    console.log('this.state.marketIds', this.state.marketIds);\n    let themContracts = [];\n\n    for (var i = 0; i < marketIds.length; i++) {\n      const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n      themContracts.push(axios.get(rmpURL));\n      this.state.allContracts.push(themContracts);\n      console.log('themContracts', themContracts);\n    }\n\n    Promise.all(themContracts).then(response => console.log('response', response) + response.map((res, index) => {\n      this.state.allContracts.push(res.data[0]);\n      console.log('this.state.allContracts.push(res.data[0])', this.state.allContracts);\n    })).catch(err => console.log(err));\n  }\n\n  logState() {\n    console.log('hello');\n    console.log('this.state.allContracts loggedState()', this.state.allContracts);\n    let loopAllContracts = this.state.allContracts;\n    loopAllContracts.map((row, k) => {\n      if (k !== 0 && k !== 1) {\n        console.log('k', k);\n        console.log('row', row);\n        this.state.marketContracts.push(row);\n      }\n    });\n  }\n\n  checkMarketContracts() {\n    console.log('this.state.marketContracts checkMarketContracts()', this.state.marketContracts);\n  }\n\n  getContractIds() {\n    let contractRow = this.state.allContracts[this.props.marketIndex];\n    contractRow.map((row, y) => {\n      console.log('y IN CONTRACT IDS', y);\n      console.log('row IN CONTRACT IDS', row.contract_id);\n      this.state.contractIds.push(row.contract_id);\n    });\n    return this.fetchContractPrices(this.state.contractIds);\n  }\n\n  checkContractIds() {\n    console.log('this.state.contractIds.length', this.state.contractIds.length);\n  }\n\n  async fetchContractPrices() {\n    let contractPrices = [];\n    this.setState({\n      valuesLength: this.state.contractIds.count\n    });\n    console.log('this.state.valuesLength', this.state.valuesLength);\n\n    for (var i = 0; i < this.state.contractIds.length; i++) {\n      const rmpURL = 'https://realmoneypolls.herokuapp.com/api/value/value_list/' + this.state.contractIds[i];\n      contractPrices.push(axios.get(rmpURL)); //this.state.contractsAndValues.push(contractPrices)\n\n      console.log('contractPrices in values list loop', contractPrices);\n      console.log('this.state.contractsAndValues in values loop call', this.state.contractsAndValues[0]);\n      console.log('this.state.contractsAndValues.length', this.state.contractsAndValues.length);\n    }\n\n    Promise.all(contractPrices).then(response => console.log('response', response) + response.map((res, index) => {\n      this.state.contractsAndValues.push(res.data[0][0]);\n      console.log('res.data', res.data[0][0]);\n      console.log('this.state.contractsAndValues should be 33 and 15', this.state.contractsAndValues);\n    })).catch(err => console.log(err));\n    console.log(this.state.contractsAndValues);\n    return this.makeOneObj();\n  }\n\n  showLiveContracts() {\n    console.log('hello');\n    let names = this.state.currentNames;\n    console.log('names IN SHOW LIVE CONTRACTS', names);\n    let prices = this.state.currentPrices;\n    console.log('prices IN SHOW LIVE CONTRACTS', prices);\n  }\n\n  makeOneObj() {\n    console.log('this.state.contractsAndValues in makeOneObj()💯 ', this.state.contractsAndValues);\n    console.log('this.state.allContracts in makeOneObj()🗞 ', this.state.allContracts);\n    console.log('this.state.allContracts.length in makeOneObj()📐 ', this.state.allContracts.length);\n    console.log('this.state.marketContracts in makeOneObj 👻', this.state.marketContracts);\n    let begin = this.state.allContracts.length / 2;\n    let names = this.state.allContracts[this.props.marketIndex];\n    let prices = this.state.contractsAndValues;\n    this.setState({\n      currentNames: names\n    });\n    this.setState({\n      currentPrices: prices\n    });\n    let together = {\n      'names': names,\n      'prices': prices\n    };\n    console.log('together', together);\n    this.state.almostThere.push(together);\n    this.setState({\n      loopThruTheseContracts: this.state.almostThere[0]\n    });\n    console.log('this.state.loopThruTheseContracts FROM Almost there', this.state.loopThruTheseContracts);\n    return;\n  }\n\n  renderIt() {\n    this.state.jsonObj.map((row, x) => {\n      console.log('row.name', row.name);\n      console.log('x', x);\n      return React.createElement(LiveContracts, {\n        contractName: row.name.name,\n        contractAvatar: row.name.image,\n        contractPrice: row.contractPrice.best_buy_yes_offer,\n        contractChange: row.contractPrice.last_trade_price - row.contractPrice.last_close_price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    let someshit = this.state.loopThruTheseContracts;\n    console.log('someshit', someshit);\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.logState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Check State\"), React.createElement(\"button\", {\n      onClick: () => this.checkMarketContracts(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Check MarketContracts\"), React.createElement(\"button\", {\n      onClick: () => this.checkContractIds(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Check Contract IDs\"), React.createElement(\"button\", {\n      onClick: () => this.checkonlyValues(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Check Only Values\")), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        setCollapsibleElement\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        onClick: () => this.getContractIds(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        onChange: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.showLiveContracts(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \" show all contracts\"), console.log('this.state.loopThruTheseContracts', this.state.loopThruTheseContracts), this.state.contractsAndValues.map((id, x) => {\n        return React.createElement(LiveContracts, {\n          key: id,\n          contractName: id.last_trade_price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        });\n      }), React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","LiveMarkets","Component","constructor","props","contracts","values","markets","json","length","state","toggleSwitch","marketIds","contractIds","allContracts","marketContracts","contractsAndValues","onlyValues","jsonObj","valuesLength","objLength","almostThere","currentNames","currentPrices","loopThruTheseContracts","componentDidMount","console","log","themContracts","i","rmpURL","push","get","Promise","all","then","response","map","res","index","data","catch","err","logState","loopAllContracts","row","k","checkMarketContracts","getContractIds","contractRow","marketIndex","y","contract_id","fetchContractPrices","checkContractIds","contractPrices","setState","count","makeOneObj","showLiveContracts","names","prices","begin","together","renderIt","x","name","image","contractPrice","best_buy_yes_offer","last_trade_price","last_close_price","render","someshit","checkonlyValues","toggle","setCollapsibleElement","contractName","id"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        toggleSwitch : false,\n        marketIds : this.props.markets,\n        contractIds: [],\n        allContracts: [],\n        marketContracts: [],\n        contractsAndValues: [],\n        onlyValues: [],\n        jsonObj: [],\n        valuesLength: \"\",\n        objLength: [], \n        almostThere: [],\n        currentNames: [],\n        currentPrices:[],\n        loopThruTheseContracts: []\n\n\n\n    }; // END OF STATE\n\n\n\n\n\n  } // END OF CONSTRUCTOR\n\n  contracts = []\n  values = []\n  markets = []\n  json = []\n  length = \"\"\n\n\n    //Notes: \n    // Need to Get all Market Ids thru props\n    // Need to get all Contracts where Market Ids exist\n    // Need to get all Values where Contract Ids exist \n    // One JSON object to map Contracts and Values\n    // Loop thru JSON, render values in <LiveContracts /> component\n\n\n\n  componentDidMount() {\n  \n    let marketIds = ['3633', '3653']\n    console.log('this.state.marketIds', this.state.marketIds)\n\n    let themContracts = [];\n\n    for ( var i = 0; i < marketIds.length; i++){\n        const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n        themContracts.push(axios.get(rmpURL));\n        this.state.allContracts.push(themContracts)\n        console.log('themContracts', themContracts)\n    }\n\n    Promise.all(themContracts).then((response) => \n    console.log('response', response) +\n    \n        response.map((res, index)=> {\n            this.state.allContracts.push(res.data[0])\n            console.log('this.state.allContracts.push(res.data[0])', this.state.allContracts)\n        }\n        )).catch((err) => console.log(err));\n        \n }\n\n \n \nlogState() {\n    console.log('hello')\n    console.log('this.state.allContracts loggedState()', this.state.allContracts)\n\n    let loopAllContracts = this.state.allContracts\n\n    loopAllContracts.map((row, k) => {\n        if (k !== 0 && k !== 1){\n            console.log('k', k)\n            console.log('row', row)\n            this.state.marketContracts.push(row)\n\n        }\n    })\n}\n\ncheckMarketContracts(){\n    console.log('this.state.marketContracts checkMarketContracts()', this.state.marketContracts)\n}\n\ngetContractIds() {\n\n\n    let contractRow = this.state.allContracts[this.props.marketIndex]\n    contractRow.map((row, y) => {\n        console.log('y IN CONTRACT IDS', y)\n        console.log('row IN CONTRACT IDS', row.contract_id)\n        this.state.contractIds.push(row.contract_id)\n    })\n\n    \n    return this.fetchContractPrices(this.state.contractIds);\n\n}\n\ncheckContractIds() {\n    console.log('this.state.contractIds.length', this.state.contractIds.length)\n}\n\nasync fetchContractPrices(){\n\n        let contractPrices = [];\n        this.setState({valuesLength: this.state.contractIds.count})\n        console.log('this.state.valuesLength', this.state.valuesLength)\n\n\n        for ( var i = 0; i < this.state.contractIds.length; i++){\n            const rmpURL = 'https://realmoneypolls.herokuapp.com/api/value/value_list/' + this.state.contractIds[i];\n            contractPrices.push(axios.get(rmpURL));\n            //this.state.contractsAndValues.push(contractPrices)\n            console.log('contractPrices in values list loop', contractPrices)\n            console.log('this.state.contractsAndValues in values loop call', this.state.contractsAndValues[0])\n            console.log('this.state.contractsAndValues.length', this.state.contractsAndValues.length)\n            \n        }\n    \n        Promise.all(contractPrices).then((response) => \n        console.log('response', response) +\n        \n            response.map((res, index)=> {\n                \n                this.state.contractsAndValues.push(res.data[0][0])\n                console.log('res.data', res.data[0][0])\n                console.log('this.state.contractsAndValues should be 33 and 15', this.state.contractsAndValues)\n            \n            } \n                \n            \n            )).catch((err) => console.log(err));\n\n            console.log(this.state.contractsAndValues)\n            return this.makeOneObj();\n            \n    \n}\n\n\n\n\n\nshowLiveContracts(){\n     console.log('hello')\n    let names = this.state.currentNames\n    console.log('names IN SHOW LIVE CONTRACTS', names)\n    let prices = this.state.currentPrices\n    console.log('prices IN SHOW LIVE CONTRACTS', prices)\n\n\n\n\n}\n\n makeOneObj(){\n\n    console.log('this.state.contractsAndValues in makeOneObj()💯 ', this.state.contractsAndValues)\n    console.log('this.state.allContracts in makeOneObj()🗞 ', this.state.allContracts)\n    console.log('this.state.allContracts.length in makeOneObj()📐 ', this.state.allContracts.length)\n    console.log('this.state.marketContracts in makeOneObj 👻', this.state.marketContracts)\n   \n    let begin = (this.state.allContracts.length / 2)\n    let names = this.state.allContracts[this.props.marketIndex]\n    let prices = this.state.contractsAndValues\n    this.setState({ currentNames: names})\n    this.setState({ currentPrices: prices})\n\n    let together = {'names': names, 'prices': prices}\n    console.log('together', together)\n    this.state.almostThere.push(together)\n    this.setState({ loopThruTheseContracts: this.state.almostThere[0]})\n    console.log('this.state.loopThruTheseContracts FROM Almost there', this.state.loopThruTheseContracts)\n\n    return;\n\n   \n\n\n}\n\n\n\n\nrenderIt(){\n\n    this.state.jsonObj.map((row, x) => {\n        console.log('row.name', row.name)\n        console.log('x', x)\n        return    <LiveContracts \n          \n            contractName={row.name.name}\n            contractAvatar={row.name.image}\n            contractPrice={row.contractPrice.best_buy_yes_offer}\n            contractChange={(row.contractPrice.last_trade_price - row.contractPrice.last_close_price)}\n            \n            />\n            \n        })\n}\n\n\nrender() {\n\nlet someshit = this.state.loopThruTheseContracts\nconsole.log('someshit', someshit) \n\n  return (\n          \n\n<div className=\"parent\">\n             <div className=\"one\" >\n             <button  onClick={() => this.logState()}>Check State</button>\n             \n             <button  onClick={() => this.checkMarketContracts()}>Check MarketContracts</button>\n             <button  onClick={() => this.checkContractIds()}>Check Contract IDs</button>\n             <button  onClick={() => this.checkonlyValues()}>Check Only Values</button>\n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      setCollapsibleElement\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'} onClick={toggle}> \n       \n        <div className=\"LiveMarkets\" onClick={() => this.getContractIds()} >\n        {this.props.contractName}\n        \n    \n          </div>\n          <SlideToggle >\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement} onChange={toggle}>\n              \n            <button onClick={this.showLiveContracts()}> show all contracts</button>\n\n            {console.log('this.state.loopThruTheseContracts', this.state.loopThruTheseContracts)}\n\n            {this.state.contractsAndValues.map((id, x) =>{\n                 return <LiveContracts key={id} contractName={id.last_trade_price}\n                 \n                 />\n            })}\n    \n\n            \n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n\n      </div>\n      )}\n    \n      />\n      </div>\n\n           \n  )\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}