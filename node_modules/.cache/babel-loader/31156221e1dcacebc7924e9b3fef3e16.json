{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TitleBar from './components/TitleBar/TitleBar';\nimport UpcomingHighlights from './components/UpcomingHighlights/UpcomingHighlight';\nimport PageHeadline from './components/PageHeadline/PageHeadline';\nimport Calendar from './components/Calendar/Calendar';\nimport WidgetFooter from './components/WidgetFooter/WidgetFooter';\nimport SectionHeadline from './components/SectionHeadline/SectionHeadline';\nimport EventsBar from './components/EventsBar/EventsBar';\nimport EventObj from './components/EventObj/EventObj';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const eventDatas = [{\n      Date: \"Nov. 18\",\n      Headlines: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n      Headlines: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n      Headlines: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n      SubtitleText: \"These events are likely to include live tweeting from @realDonaldTrump\"\n    }, {\n      Date: \"19\",\n      eventRowText: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n      Day: \"TUESDAY\",\n      id: 2\n    }, {\n      Date: \"20\",\n      eventRowText: \"Fifth Dem Debate ðŸ“º, Union Leader Endorsement ðŸ—ž \",\n      Day: \"WEDNESDAY\",\n      id: 3\n    }, {\n      Date: \"21\",\n      eventRowText: \"Fiona Hill Impeachment Hearing ðŸ“º\",\n      Day: \"THURSDAY\",\n      id: 4\n    }, {\n      Date: \"22\",\n      eventRowText: \"Illinois Filing Deadline ðŸ—³\",\n      Day: \"FRIDAY\",\n      id: 5\n    }];\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(TitleBar, {\n      TitleText: \"EVENTS CALENDAR\",\n      SubtitleText: \"PredictIt Live Markets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(UpcomingHighlights, {\n      untilDebate: \"5 Days\",\n      untilText: \"until November debate\",\n      untilElection: \"354 Days\",\n      untilElectionText: \"until election day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(PageHeadline, {\n      Headline: \"Upcoming Events\",\n      HeadlineBlurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events.  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(SectionHeadline, {\n      SectionHeadline: \"Associated Events\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(EventsBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), eventDatas.map((eventData, index) => {\n      console.log('this the index', index);\n      return React.createElement(EventObj, {\n        key: index,\n        eventDatas: eventData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/App.js"],"names":["React","TitleBar","UpcomingHighlights","PageHeadline","Calendar","WidgetFooter","SectionHeadline","EventsBar","EventObj","App","Component","constructor","props","state","render","eventDatas","Date","Headlines","SubtitleText","eventRowText","Day","id","map","eventData","index","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,kBAAP,MAA+B,mDAA/B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW,EAAX;AAID;;AACHC,EAAAA,MAAM,GAAG;AAEP,UAAMC,UAAU,GAAG,CACjB;AAEAC,MAAAA,IAAI,EAAE,SAFN;AAGAC,MAAAA,SAAS,EAAE,qFAHX;AAIAA,MAAAA,SAAS,EAAE,qFAJX;AAKAA,MAAAA,SAAS,EAAE,qFALX;AAMAC,MAAAA,YAAY,EAAE;AANd,KADiB,EAWjB;AAEAF,MAAAA,IAAI,EAAE,IAFN;AAGAG,MAAAA,YAAY,EAAE,qFAHd;AAIAC,MAAAA,GAAG,EAAE,SAJL;AAKAC,MAAAA,EAAE,EAAE;AALJ,KAXiB,EAmBjB;AAEAL,MAAAA,IAAI,EAAE,IAFN;AAGAG,MAAAA,YAAY,EAAE,mDAHd;AAIAC,MAAAA,GAAG,EAAE,WAJL;AAKAC,MAAAA,EAAE,EAAE;AALJ,KAnBiB,EA2BjB;AAEAL,MAAAA,IAAI,EAAE,IAFN;AAGAG,MAAAA,YAAY,EAAE,mCAHd;AAIAC,MAAAA,GAAG,EAAE,UAJL;AAKAC,MAAAA,EAAE,EAAE;AALJ,KA3BiB,EAmCjB;AAEAL,MAAAA,IAAI,EAAE,IAFN;AAGAG,MAAAA,YAAY,EAAE,6BAHd;AAIAC,MAAAA,GAAG,EAAE,QAJL;AAKAC,MAAAA,EAAE,EAAE;AALJ,KAnCiB,CAAnB;AA+CA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACA,MAAA,SAAS,EAAC,iBADV;AAEA,MAAA,YAAY,EAAC,wBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,kBAAD;AACA,MAAA,WAAW,EAAC,QADZ;AAEA,MAAA,SAAS,EAAC,uBAFV;AAGA,MAAA,aAAa,EAAC,UAHd;AAIA,MAAA,iBAAiB,EAAC,oBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAYE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,iBADX;AAEE,MAAA,aAAa,EAAC,qIAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAiBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAsBE,oBAAC,eAAD;AACA,MAAA,eAAe,EAAC,mBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EA2BE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAiCIN,UAAU,CAACO,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACA,aAAO,oBAAC,QAAD;AACP,QAAA,GAAG,EAAEA,KADE;AAEP,QAAA,UAAU,EAAED,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAOC,KATL,CAjCJ,CADF;AAmDA;;AA7GgC;;AA+GlC,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TitleBar from './components/TitleBar/TitleBar';\nimport UpcomingHighlights from './components/UpcomingHighlights/UpcomingHighlight';\nimport PageHeadline from './components/PageHeadline/PageHeadline';\nimport Calendar from './components/Calendar/Calendar';\nimport WidgetFooter from './components/WidgetFooter/WidgetFooter';\nimport SectionHeadline from './components/SectionHeadline/SectionHeadline';\nimport EventsBar from './components/EventsBar/EventsBar';\nimport EventObj from './components/EventObj/EventObj';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n\n\n    }\n  }\nrender() {\n\n  const eventDatas = [\n    { \n\n    Date: \"Nov. 18\",\n    Headlines: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n    Headlines: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n    Headlines: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n    SubtitleText: \"These events are likely to include live tweeting from @realDonaldTrump\",\n\n\n  },\n    { \n    \n    Date: \"19\",\n    eventRowText: \"Jennifer Willaims, Lt. Col. Alexander Vindman, Kurt Volker, Impeachment Hearing ðŸ“º \",\n    Day: \"TUESDAY\",\n    id: 2,\n\n  },\n    { \n        \n    Date: \"20\",\n    eventRowText: \"Fifth Dem Debate ðŸ“º, Union Leader Endorsement ðŸ—ž \",\n    Day: \"WEDNESDAY\",\n    id: 3,\n\n  },\n    { \n    \n    Date: \"21\",\n    eventRowText: \"Fiona Hill Impeachment Hearing ðŸ“º\",\n    Day: \"THURSDAY\",\n    id: 4,\n\n  },\n    { \n    \n    Date: \"22\",\n    eventRowText: \"Illinois Filing Deadline ðŸ—³\",\n    Day: \"FRIDAY\",\n    id: 5,\n\n  }\n    \n  ];\n\n\n  return (\n    <div className=\"App\">\n      <TitleBar \n      TitleText=\"EVENTS CALENDAR\"\n      SubtitleText=\"PredictIt Live Markets\"\n      />\n      <UpcomingHighlights\n      untilDebate=\"5 Days\"\n      untilText=\"until November debate\"\n      untilElection=\"354 Days\"\n      untilElectionText=\"until election day\"\n      />\n\n      <PageHeadline\n        Headline=\"Upcoming Events\"\n        HeadlineBlurb=\"PredictItâ€™s Live Market Data based on upcoming future events. These are the markets most closely associated with key events.  \"\n      />\n\n      <Calendar\n  \n      \n      />\n\n      <SectionHeadline\n      SectionHeadline=\"Associated Events\"\n\n      />\n\n      <EventsBar\n\n\n      />\n\n{\n        eventDatas.map((eventData, index) => {\n            console.log('this the index', index)\n            return <EventObj\n            key={index} \n            eventDatas={eventData}          \n            />\n            \n          \n            \n            })\n           \n           \n            } \n     \n\n    </div>\n  );\n }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}