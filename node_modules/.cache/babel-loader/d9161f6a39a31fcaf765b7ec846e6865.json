{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\n\n/* \n\n <LiveContracts \n        avatar={require('../../images/BidenAvatar.png')}\n        contractName=\"Joe Biden\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.14\"\n        priceChange=\"0.2\" \n        />\n         <LiveContracts \n        avatar={require('../../images/BernieAvatar.png')}\n        contractName=\"Bernie Sanders\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.06\"\n        priceChange=\"0.3\" \n        />\n         <LiveContracts \n        avatar={require('../../images/ButtigeigAvatar.png')}\n        contractName=\"Pete Buttigeig\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.05\"\n        priceChange=\"0.1\" \n        />\n         <LiveContracts \n        avatar={require('../../images/WarrenAvatar.png')}\n        contractName=\"Elizabeth Warren\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.03\"\n        priceChange=\"0.1\" \n        />\n\n\n\n\n*/\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleActive = () => {\n      this.setState({\n        active: !this.state.active\n      });\n    };\n\n    this.state = {\n      active: false,\n      contracts: [],\n      contractNames: [],\n      mId1: '2721',\n      contractIds: [],\n      contractPrices: [],\n      activeArray: [],\n      cPrice: \"\",\n      pChange: \"\",\n      cName: \"\",\n      cAvatar: \"\",\n      cData: [],\n      price_and_Change: []\n    };\n  }\n\n  async componentDidMount() {\n    //Get contracts\n    axios.get('http://localhost:3002/api/contract/contract_list/' + this.props.mId1Title).then(res => {\n      this.setState({\n        contracts: res.data[0]\n      });\n      return console.log('this.state.contracts', this.state.contracts);\n    });\n  }\n\n  contractDataCall() {\n    axios.get('http://localhost:3002/api/value/value_list/' + contractId).then(res => {\n      // Put contract values into array in state\n      this.setState({\n        contractPrices: res.data[0]\n      });\n      return console.log('this.state.contractPrices', this.state.contractPrices); // end of prices call\n    });\n  }\n\n  componentDidUpdate() {\n    console.log('this.state.contracts', this.state.contracts);\n    const contracts = this.state.contracts;\n    contracts.map((contract, index) => {\n      this.state.contractIds.push(contract.contract_id);\n      const contractIds = this.state.contractIds;\n      this.state.contractNames.push(contract.name);\n      const contractNames = this.state.contractNames;\n    });\n    console.log('this.state.contracts', this.state.contracts);\n    this.contractDataCall();\n  }\n\n  async createContracts() {\n    const namesPrices = [{\n      contractPrice: this.state.price_and_Change.price,\n      priceChange: this.state.price_and_Change.change\n    }];\n    this.state.contracts.map((contract, index) => {\n      //console.log('this the index', index)\n      return React.createElement(LiveContracts, {\n        key: index,\n        contractName: contract.name,\n        contractAvatar: contract.image,\n        namesPrices: namesPrices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    const activeContracts = [{\n      avatar: require(\"../../images/KamalaAvatar.png\"),\n      contractName: \"Kamala Harris\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.84\",\n      priceChange: \"0.02\"\n    }, {\n      avatar: require(\"../../images/BidenAvatar.png\"),\n      contractName: \"Joe Biden\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.02\"\n    }, {\n      avatar: require(\"../../images/BernieAvatar.png\"),\n      contractName: \"Bernie Sanders\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.02\"\n    }, {\n      avatar: require(\"../../images/ButtigeigAvatar.png\"),\n      contractName: \"Pete Buttigeig\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.00\"\n    }, {\n      avatar: require(\"../../images/WarrenAvatar.png\"),\n      contractName: \"Elizabeth Warren\",\n      contractLabel: \"Latest Price\",\n      contractPrice: \"0.01\",\n      priceChange: \"0.02\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        progress,\n        setCollapsibleElement,\n        range\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        onClick: this.props.theToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, this.contractDataCall(), React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","LiveMarkets","Component","constructor","props","toggleActive","setState","active","state","contracts","contractNames","mId1","contractIds","contractPrices","activeArray","cPrice","pChange","cName","cAvatar","cData","price_and_Change","componentDidMount","get","mId1Title","then","res","data","console","log","contractDataCall","contractId","componentDidUpdate","map","contract","index","push","contract_id","name","createContracts","namesPrices","contractPrice","price","priceChange","change","image","render","activeContracts","avatar","require","contractName","contractLabel","toggle","progress","setCollapsibleElement","range","theToggle"],"mappings":"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","sourcesContent":["/* \n\n <LiveContracts \n        avatar={require('../../images/BidenAvatar.png')}\n        contractName=\"Joe Biden\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.14\"\n        priceChange=\"0.2\" \n        />\n         <LiveContracts \n        avatar={require('../../images/BernieAvatar.png')}\n        contractName=\"Bernie Sanders\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.06\"\n        priceChange=\"0.3\" \n        />\n         <LiveContracts \n        avatar={require('../../images/ButtigeigAvatar.png')}\n        contractName=\"Pete Buttigeig\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.05\"\n        priceChange=\"0.1\" \n        />\n         <LiveContracts \n        avatar={require('../../images/WarrenAvatar.png')}\n        contractName=\"Elizabeth Warren\"\n        contractLabel=\"Latest Price\"\n        contractPrice=\"0.03\"\n        priceChange=\"0.1\" \n        />\n\n\n\n\n*/\n\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\n\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        active: false,\n        contracts: [],\n        contractNames: [],\n        mId1: '2721',\n        contractIds: [],\n        contractPrices: [],\n        activeArray: [],\n        cPrice: \"\",\n        pChange: \"\",\n        cName: \"\", \n        cAvatar: \"\", \n        cData: [],\n        price_and_Change: []\n\n\n    }\n\n  \n  }\n\n\n  async componentDidMount() {\n      //Get contracts\n   axios.get('http://localhost:3002/api/contract/contract_list/'+ this.props.mId1Title).then(res => { \n        this.setState({ contracts: res.data[0] });\n        return console.log('this.state.contracts', this.state.contracts);\n       \n}\n   );\n\n}\n\n\ncontractDataCall() {\n\n   \n  \n    \n\n\n    axios.get('http://localhost:3002/api/value/value_list/' + contractId).then(res =>{\n                  \n          // Put contract values into array in state\n          this.setState({ contractPrices: res.data[0]})\n\n          \n          \n      \n  \n  \n         return console.log('this.state.contractPrices', this.state.contractPrices);\n  \n  \n      \n  \n          \n     \n      // end of prices call\n    })\n}\n\n\n\ncomponentDidUpdate() {\n    console.log('this.state.contracts', this.state.contracts)\n\n    const contracts = this.state.contracts\n        contracts.map((contract, index) => {\n            this.state.contractIds.push(contract.contract_id)\n            const contractIds = this.state.contractIds \n            this.state.contractNames.push(contract.name)\n            const contractNames = this.state.contractNames\n\n}\n\n)\n\nconsole.log('this.state.contracts', this.state.contracts)\nthis.contractDataCall()\n\n\n\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* \n\n\ncomponentWillUpdate() {\n\n    const names = this.state.contractNames\n    names.map((name, index) res => {\n    const contract = contract.name\n\n    })\n\n    const contracts = this.state.contracts\n    contracts.map((contract, index) res => {\n    const name = contract.name\n    const avatar = contract.image\n    \n    })\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\ncomponentWillUpdate() {\n    const contractIds = this.state.contractIds \n    const contractNames = this.state.contractNames\n    console.log('contractIds', contractIds)\n    console.log('contractNames', contractNames)\n\n\n\n    contractIds.map(( contractId, index) => {\n        axios.get('http://localhost:3002/api/value/value_list/' + contractId[index]).then(res =>{\n                            \n                            // Put contract values into array in state\n                            this.setState({ contractPrices: res.data[0]})\n                            // make some variables to easily move data around\n                            const values = this.state.contractPrices\n                            const lastTrade = values.last_trade_price\n                            const lastClose = values.last_close_price\n                            const priceDiff = (lastClose - lastTrade).toFixed(2)\n                            // save prices in state\n                            const cPrice = lastTrade;\n                            this.setState({ cPrice: cPrice})\n                            const pChange = priceDiff;\n                            this.setState({ pChange: pChange})\n                            console.log('this.state.cPrice', this.state.cPrice)\n                            console.log('this.state.pChange', this.state.pChange)\n                            console.log('this.state.contractPrices', this.state.contractPrices)\n            \n                        \n            \n                            \n                        })\n                        // end of prices call\n    })\n\n    \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Loop thru all the contracts\n        const contracts = this.state.contracts\n        contracts.map((contract, index) => {\n            this.state.contractIds.push(contract.contract_id)\n            // put name and avatar in state \n            this.setState({ cName: contract.name})\n            this.setState({ cAvatar: contract.image})\n            const contractIds = this.state.contractIds \n            // Need Contract Ids\n            // For each contract (data), Push the contract_id into contractIds array\n\n           \n               \n            \n            \n            \n            \n               \n           \n\n\n            \n        \n          \n\n            // Push both the current contract's name, avatar, into an array with the two values assoc w/ contract_id\n               const dataObj = {'avatar': this.state.cAvatar, 'name': this.state.cName, 'price': this.state.cPrice, 'change': this.state.pChange}\n               this.state.cData.push(dataObj)\n               console.log('this.state.cData', this.state.cData);\n\n               this.setState({ cPrice: \"\"})\n               this.setState({ pChange: \"\"})\n               this.setState({ cName: \"\"})\n               this.setState({ cAvatar: \"\"})\n\n               console.log('this.state.cPrice', this.state.cPrice)\n               console.log('this.state.pChange', this.state.pChange)\n\n               console.log('this.state.cName', this.state.cName)\n               console.log('this.state.cAvatar', this.state.cAvatar)\n               console.log('this.state.contracts', this.state.contracts)\n\n            })\n\n\n        \n    }); \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naxios.get('http://localhost:3002/api/value/value_list/' + contractIds[index]).then(res =>{\n                            \n                            // Put contract values into array in state\n                            this.setState({ contractPrices: res.data[0]})\n                            // make some variables to easily move data around\n                            const values = this.state.contractPrices\n                            const lastTrade = values.last_trade_price\n                            const lastClose = values.last_close_price\n                            const priceDiff = (lastClose - lastTrade).toFixed(2)\n                            // save prices in state\n                            const cPrice = lastTrade;\n                            this.setState({ cPrice: cPrice})\n                            const pChange = priceDiff;\n                            this.setState({ pChange: pChange})\n                            console.log('this.state.cPrice', this.state.cPrice)\n                            console.log('this.state.pChange', this.state.pChange)\n                            console.log('this.state.contractPrices', this.state.contractPrices)\n            \n                        \n            \n                            \n                        })\n                        // end of prices call\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\naxios.get('http://localhost:3002/api/value/value_list/' + contractIds[index]).then(res =>{\n                \n                // Put contract values into array in state\n                this.setState({ contractPrices: res.data[0]})\n                // make some variables to easily move data around\n                const values = this.state.contractPrices\n                const lastTrade = values.last_trade_price\n                const lastClose = values.last_close_price\n                const priceDiff = (lastClose - lastTrade).toFixed(2)\n                const priceSwap = (lastClose - lastTrade).toFixed(2)\n                // save prices in state\n                const cPrice = lastTrade;\n                this.setState({ cPrice: cPrice})\n                const pChange = priceDiff;\n                this.setState({ pChange: pChange})\n                console.log('this.state.cPrice', this.state.cPrice)\n                console.log('this.state.pChange', this.state.pChange)\n                console.log('this.state.contractPrices', this.state.contractPrices)\n\n            \n\n                \n            })\n            // end of prices call\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        console.log('response', res.data);\n        this.setState({ data: res.data[0] });\n        \n        // Loop thru all the contracts\n        const datas = this.state.data\n        datas.map((data, index) => {\n        \n\n        //Get the values\n        const theValues = \n        // Get the Ids\n        // For each contract (data), Push the contract_id into contractIds array\n        this.state.contractIds.push(data.contract_id)\n\n        console.log('contractIds', this.state.contractIds)\n        console.log('this.state.data', this.state.data);\n        \n        // Get the contract name and image\n        const cName = data.name;\n        const cAvatar = data.image;\n\n        this.state.nameD.push(cName)\n        this.state.avatarD.push(cAvatar)\n\n    \n      \n        console.log('cData Array', this.state.cData)\n       \n       \n        \n        \n        \n        const ids = this.state.contractIds\n        axios.get('http://localhost:3002/api/value/value_list/' + ids[index])\n        .then(res => {\n            this.setState({ contractPrices: res.data[0]})\n            \n            this.afunction()\n            console.log('this.state.activeArray', this.state.activeArray);\n            return console.log('contract prices', this.state.contractPrices) \n        });\n\n        // end of Contracts Loop\n        })\n        //console.log('this.state.data', this.state.data)\n\n\n*/\n\n    \n  \n\n  toggleActive = () => {\n\n      this.setState({ active: !this.state.active })\n  }\n\n\n  async createContracts(){\n\n    const namesPrices = [\n        {\n\n            contractPrice: this.state.price_and_Change.price,\n            priceChange: this.state.price_and_Change.change\n        }\n\n    ]\n    \n    this.state.contracts.map((contract, index) => {\n\n\n\n        //console.log('this the index', index)\n        return <LiveContracts\n        key={index} \n        contractName={contract.name}\n        contractAvatar={contract.image}\n        namesPrices={namesPrices}\n        \n        \n       \n        />\n        \n        })\n\n  }\n\n\n\n \n\n\nrender() {\n\n    const activeContracts = [\n        {\n            avatar: require(\"../../images/KamalaAvatar.png\"),\n            contractName: \"Kamala Harris\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.84\",\n            priceChange: \"0.02\"\n        },\n        {\n            avatar: require(\"../../images/BidenAvatar.png\"),\n            contractName: \"Joe Biden\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.02\"\n        },\n        {\n            avatar: require(\"../../images/BernieAvatar.png\"),\n            contractName: \"Bernie Sanders\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.02\"\n        },\n        {\n            avatar: require(\"../../images/ButtigeigAvatar.png\"),\n            contractName: \"Pete Buttigeig\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.00\"\n        },\n        {\n            avatar: require(\"../../images/WarrenAvatar.png\"),\n            contractName: \"Elizabeth Warren\",\n            contractLabel: \"Latest Price\",\n            contractPrice: \"0.01\",\n            priceChange: \"0.02\"\n        },\n\n    ]\n\n\n\n\n   \n\n\n\n  return (\n         <div className=\"parent\">\n             <div className=\"one\">\n                 \n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      progress,\n      setCollapsibleElement,\n      range,\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'} onClick={toggle }>\n        \n        <div className=\"LiveMarkets\"  onClick={this.props.theToggle}>\n        {this.props.contractName}\n    \n          </div>\n          <SlideToggle>\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}>\n              {this.contractDataCall()} \n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n       \n        \n\n   \n\n\n      \n      </div>\n      )}\n    \n      />\n      </div>\n  );\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}