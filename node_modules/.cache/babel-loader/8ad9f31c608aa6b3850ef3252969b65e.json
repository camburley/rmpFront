{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\nimport { objectTypeSpreadProperty, nullLiteral, breakStatement } from '@babel/types';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.globalContracts = [];\n    this.globalContractIds = [];\n    this.globalNames = [];\n    this.globalArray = [];\n    this.bigObj = [];\n    this.globalNamesLength = \"\";\n    this.putIndex = [];\n    this.market_ids = [];\n    this.marketIds = [];\n    this.largestObj = [];\n    this.unique_array = [];\n    this.state = {\n      active: false,\n      contracts: [],\n      contractNames: [],\n      contractIds: [],\n      contractPrices: [],\n      globalNames: [],\n      globalPrices: [],\n      unique_array: []\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  getContractPrices() {}\n\n  async componentDidMount() {\n    this.marketIds.push(this.props.mId1Title);\n    console.log('this.marketIds', this.marketIds);\n    this.marketIds.map((Id, index) => {\n      //Get contracts\n      axios.get('http://localhost:3002/api/contract/contract_list/' + Id).then(res => {\n        // this.setState({ contracts: res.data[0] });\n        console.log('res.data[0] NO IDs in Global Contracts', res.data[0]);\n        this.globalContracts.push(res.data[0]);\n        const contracts = this.globalContracts;\n        console.log('contracts[0] how many b4 i run this loop?', contracts[0]);\n        contracts[0].map((contract, index) => {\n          console.log('this.globalContracts[0] BEFORE ADDING TO ARRAY', this.globalContracts[0]);\n          console.log('this.globalContractIds BEFORE ADDING TO ARRAY', this.globalContractIds);\n          this.globalContractIds.push(contract.contract_id);\n          const namesUrls = {\n            \"marketId\": Id,\n            \"name\": contract.name,\n            \"url\": contract.image,\n            \"id\": contract.contract_id\n          };\n          this.globalNames.push(namesUrls);\n          this.globalNamesLength = this.globalNames.length;\n        });\n        console.log('this.globalNames in componentDidMount()', this.globalNames);\n        return false;\n      } // something end of call \n      );\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        progress,\n        setCollapsibleElement,\n        range\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        onClick: toggle,\n        onChange: this.getContractPrices(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, // check contractIds array -- see if they're all there\n      // checked!\n      this.globalContractIds.forEach((array, index) => {\n        //console.log('array', array)\n        axios.get('http://localhost:3002/api/value/value_list/' + array).then(res => {\n          let priceGroupings = {\n            \"contract_id\": array,\n            \"contractPrice\": res.data[0][0].best_buy_yes_offer,\n            \"contractChange\": (res.data[0][0].last_trade_price - res.data[0][0].last_close_price).toFixed(2)\n          };\n          this.globalArray.push(priceGroupings);\n          return false;\n        }); // end of prices call\n      }), React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, // GET PRICES LOOP \n      this.globalNames.map((row, index) => this.globalArray.map((line, k) => {\n        const jointObj = {\n          \"name\": row.name,\n          \"url\": row.url,\n          \"contractPrice\": line.contractPrice,\n          \"contractChange\": line.contractChange,\n          \"contract_id\": line.contract_id,\n          \"id\": row.id,\n          \"repeat\": 0\n        };\n        this.bigObj.push(jointObj);\n        return console.log('jointObj', jointObj), console.log('this.bigObj THIS IS IN 1ST LOOP  IN RENDER', this.bigObj);\n      })) // GET PRICES LOOP ABOVE\n      , console.log('this.bigObj WITHIN JSX of BigOBJ', this.bigObj), this.bigObj.map((obj, index) => {\n        const name = obj.name;\n        const url = obj.url;\n        const price = obj.contractPrice;\n        const change = obj.contractChange;\n        return React.createElement(LiveContracts, {\n          key: index,\n          contractName: name,\n          contractAvatar: url,\n          contractPrice: price,\n          contractChange: change,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        });\n      }), React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","objectTypeSpreadProperty","nullLiteral","breakStatement","LiveMarkets","Component","constructor","props","globalContracts","globalContractIds","globalNames","globalArray","bigObj","globalNamesLength","putIndex","market_ids","marketIds","largestObj","unique_array","state","active","contracts","contractNames","contractIds","contractPrices","globalPrices","componentDidMount","bind","getContractPrices","push","mId1Title","console","log","map","Id","index","get","then","res","data","contract","contract_id","namesUrls","name","image","length","render","toggle","progress","setCollapsibleElement","range","forEach","array","priceGroupings","best_buy_yes_offer","last_trade_price","last_close_price","toFixed","contractName","row","line","k","jointObj","url","contractPrice","contractChange","id","obj","price","change"],"mappings":"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","sourcesContent":["\n\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\nimport { objectTypeSpreadProperty, nullLiteral, breakStatement } from '@babel/types';\n\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        active: false,\n        contracts: [],\n        contractNames: [],\n        contractIds: [],\n        contractPrices: [],\n        globalNames: [],\n        globalPrices: [],\n        unique_array: [],\n      \n\n\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n\n  \n  }\n\n  globalContracts = [];\n  globalContractIds = [];\n  globalNames = [];\n  globalArray = [];\n  bigObj= [];\n  globalNamesLength = \"\" \n  putIndex = [];\n  market_ids = [];\n  marketIds = [];\n  largestObj = [];\n  unique_array = []\n\n\n  getContractPrices(){\n   \n    }\n\n  \n\n   async componentDidMount() {\n    \n   \n    \n    this.marketIds.push(this.props.mId1Title)\n    console.log('this.marketIds', this.marketIds)\n\n    this.marketIds.map((Id, index)=>\n    \n    {\n\n           //Get contracts\n   axios.get('http://localhost:3002/api/contract/contract_list/'+ Id).then(res => { \n    // this.setState({ contracts: res.data[0] });\n    console.log('res.data[0] NO IDs in Global Contracts', res.data[0])\n    this.globalContracts.push(res.data[0])\n    const contracts = this.globalContracts\n    console.log('contracts[0] how many b4 i run this loop?', contracts[0])\n\n    contracts[0].map((contract, index) => {\n        \n        console.log('this.globalContracts[0] BEFORE ADDING TO ARRAY', this.globalContracts[0])\n        console.log('this.globalContractIds BEFORE ADDING TO ARRAY', this.globalContractIds)\n         this.globalContractIds.push(contract.contract_id)\n         const namesUrls = {\"marketId\": Id,\"name\": contract.name, \"url\": contract.image, \"id\": contract.contract_id }\n         this.globalNames.push(namesUrls)\n         this.globalNamesLength = this.globalNames.length\n\n        \n    }\n    )\n    console.log('this.globalNames in componentDidMount()', this.globalNames)\n    return false;\n    \n}\n\n// something end of call \n\n);\n        \n    })\n\n\n    }\n\n\n\n\n\n  \n\n\n\n\nrender() {\n\n \n  return (\n         <div className=\"parent\">\n             <div className=\"one\">\n                 \n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      progress,\n      setCollapsibleElement,\n      range,\n    }) => (\n\n        \n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'} onClick={toggle} onChange={this.getContractPrices()} >\n            { // check contractIds array -- see if they're all there\n   \n    // checked!\n\n\n    this.globalContractIds.forEach((array, index) => {\n       \n\n        //console.log('array', array)\n       \n        axios.get('http://localhost:3002/api/value/value_list/' + array).then(res =>{\n\n        let priceGroupings = {\"contract_id\": array, \"contractPrice\": res.data[0][0].best_buy_yes_offer, \"contractChange\": (res.data[0][0].last_trade_price - res.data[0][0].last_close_price).toFixed(2)}\n        this.globalArray.push(priceGroupings)\n        \n    \n        \n     return false\n\n    \n        \n    \n    }) \n    // end of prices call\n  \n    })}\n        \n        <div className=\"LiveMarkets\"    >\n\n        {this.props.contractName}\n    \n          </div>\n          <SlideToggle >\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}>\n\n\n                  {\n                      // GET PRICES LOOP \n                       this.globalNames.map((row, index) =>\n                      this.globalArray.map((line, k) => {\n                        \n                            const jointObj = {\"name\": row.name, \"url\": row.url, \"contractPrice\": line.contractPrice, \"contractChange\": line.contractChange, \"contract_id\": line.contract_id, \"id\": row.id, \"repeat\": 0}\n                            this.bigObj.push(jointObj)\n                            return (console.log('jointObj', jointObj), console.log('this.bigObj THIS IS IN 1ST LOOP  IN RENDER', this.bigObj)\n                           \n                          \n                            \n                            )\n                      })\n                        )\n                  \n                      // GET PRICES LOOP ABOVE\n                  }\n\n                \n                {console.log('this.bigObj WITHIN JSX of BigOBJ', this.bigObj)}\n               \n               {\n               \n               this.bigObj.map((obj, index) => {\n\n                const name = obj.name;\n                const url = obj.url;\n                const price = obj.contractPrice;\n                const change = obj.contractChange;\n               \n                return (\n                     \n                            <LiveContracts\n                            key={index}\n                            contractName={name}\n                            contractAvatar={url}\n                            contractPrice={price}\n                            contractChange={change}\n                            \n                         \n                            />\n                )\n            \n\n    })\n               }\n\n              \n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n       \n        \n\n   \n\n\n      \n      </div>\n      )}\n    \n      />\n      </div>\n  );\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}