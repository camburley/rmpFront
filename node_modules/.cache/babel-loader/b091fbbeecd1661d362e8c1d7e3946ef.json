{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contracts = [];\n    this.values = [];\n    this.markets = this.props.markets;\n    this.json = [];\n    this.length = \"\";\n    this.state = {\n      toggleSwitch: false,\n      marketIds: [],\n      contractIds: [],\n      allContracts: [],\n      marketContracts: [],\n      contractsAndValues: [],\n      jsonObj: [],\n      objLength: []\n    }; // END OF STATE\n  } // END OF CONSTRUCTOR\n\n\n  //Notes: \n  // Need to Get all Market Ids thru props\n  // Need to get all Contracts where Market Ids exist\n  // Need to get all Values where Contract Ids exist \n  // One JSON object to map Contracts and Values\n  // Loop thru JSON, render values in <LiveContracts /> component\n  componentDidMount() {\n    let marketIds = ['3633', '3653'];\n    let themContracts = [];\n\n    for (var i = 0; i < marketIds.length - 0; i++) {\n      const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n      themContracts.push(axios.get(rmpURL));\n      this.state.allContracts.push(themContracts);\n      console.log('themContracts', themContracts);\n    }\n\n    Promise.all(themContracts).then(response => console.log('response', response) + response.map((res, index) => {\n      this.state.allContracts.push(res.data[0]);\n      console.log('this.state.allContracts.push(res.data[0])', this.state.allContracts);\n    })).catch(err => console.log(err));\n  }\n\n  logState() {\n    console.log('hello');\n    console.log('this.state.allContracts loggedState()', this.state.allContracts);\n    let loopAllContracts = this.state.allContracts;\n    loopAllContracts.map((row, k) => {\n      if (k != 0 && k != 1) {\n        console.log('k', k);\n        console.log('row', row);\n        this.state.marketContracts.push(row);\n      }\n    });\n  }\n\n  checkMarketContracts() {\n    console.log('this.state.marketContracts checkMarketContracts()', this.state.marketContracts);\n  }\n\n  fetchContractPrices() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.logState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Check State\"), React.createElement(\"button\", {\n      onClick: () => this.checkMarketContracts(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Check MarketContracts\"), React.createElement(\"button\", {\n      onClick: () => this.fetchContractPrices(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Contract Name Gets Prices\")), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        setCollapsibleElement\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","LiveMarkets","Component","constructor","props","contracts","values","markets","json","length","state","toggleSwitch","marketIds","contractIds","allContracts","marketContracts","contractsAndValues","jsonObj","objLength","componentDidMount","themContracts","i","rmpURL","push","get","console","log","Promise","all","then","response","map","res","index","data","catch","err","logState","loopAllContracts","row","k","checkMarketContracts","fetchContractPrices","render","toggle","setCollapsibleElement","contractName"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        toggleSwitch : false,\n        marketIds : [],\n        contractIds: [],\n        allContracts: [],\n        marketContracts: [],\n        contractsAndValues: [],\n        jsonObj: [],\n        objLength: []\n\n\n\n    }; // END OF STATE\n\n\n\n\n\n  } // END OF CONSTRUCTOR\n\n  contracts = []\n  values = []\n  markets = this.props.markets\n  json = []\n  length = \"\"\n\n\n    //Notes: \n    // Need to Get all Market Ids thru props\n    // Need to get all Contracts where Market Ids exist\n    // Need to get all Values where Contract Ids exist \n    // One JSON object to map Contracts and Values\n    // Loop thru JSON, render values in <LiveContracts /> component\n\n\n\n componentDidMount() {\n    let marketIds = ['3633', '3653']\n    let themContracts = [];\n\n    for ( var i = 0; i < marketIds.length - 0; i++){\n        const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n        themContracts.push(axios.get(rmpURL));\n        this.state.allContracts.push(themContracts)\n        console.log('themContracts', themContracts)\n    }\n\n    Promise.all(themContracts).then((response) => \n    console.log('response', response) +\n    \n        response.map((res, index)=> {\n            this.state.allContracts.push(res.data[0])\n            console.log('this.state.allContracts.push(res.data[0])', this.state.allContracts)\n        }\n        )).catch((err) => console.log(err));\n        \n }\n\n \n \nlogState() {\n    console.log('hello')\n    console.log('this.state.allContracts loggedState()', this.state.allContracts)\n\n    let loopAllContracts = this.state.allContracts\n\n    loopAllContracts.map((row, k) => {\n        if (k != 0 && k != 1){\n            console.log('k', k)\n            console.log('row', row)\n            this.state.marketContracts.push(row)\n\n        }\n    })\n}\n\ncheckMarketContracts(){\n    console.log('this.state.marketContracts checkMarketContracts()', this.state.marketContracts)\n}\n\nfetchContractPrices(){\n    \n\n    \n}\n\n\n\nrender() {\n\n\n \n  return (\n          \n\n<div className=\"parent\">\n             <div className=\"one\">\n             <button  onClick={() => this.logState()}>Check State</button>\n             \n             <button  onClick={() => this.checkMarketContracts()}>Check MarketContracts</button>\n             <button  onClick={() => this.fetchContractPrices()}>Contract Name Gets Prices</button>\n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      setCollapsibleElement\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'}  > \n       \n        <div className=\"LiveMarkets\"  >\n        {this.props.contractName}\n        \n    \n          </div>\n          <SlideToggle >\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}>\n\n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n\n      </div>\n      )}\n    \n      />\n      </div>\n\n           \n  )\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}