{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/EventObj/EventObj.js\";\n\n/* \n\n\n<LiveMarkets\n            contractName=\"2020 Iowa Dem caucus winner\"\n             />\n            <LiveMarkets \n            contractName=\"2020 NH Dem primary winner\"\n            />\n            <LiveMarkets \n            contractName=\"2020 Democratic VP nominee\"\n            />\n            <LiveMarkets \n            contractName=\"Which of these Dems drops out next\"\n            />\n          \n\n              \n\n\n\n\n*/\nimport React from 'react';\nimport './EventObj.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport button from 'react';\nimport RelatedMarkets from '../RelatedMarkets/RelatedMarkets';\nimport { getContractIds } from '../LiveMarkets/LiveMarkets';\nimport LiveMarkets from '../LiveMarkets/LiveMarkets';\nimport LiveContracts from '../LiveContracts/LiveContracts';\n\nclass EventObj extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = () => {\n      this.getContractIds();\n      console.log(' ðŸ‘†hit the button in the parent');\n    };\n\n    this.onToggle = () => {\n      this.setState({\n        toggleEvent: Date.now()\n      });\n    };\n\n    this.markets = this.props.eventDatas.markets;\n    this.child = React.createRef();\n    this.state = {\n      active: true,\n      toggleEvent: 0\n    };\n    this.getContractIds = this.getContractIds.bind(this);\n  }\n\n  render() {\n    const relevantMarkets = [{\n      contractName: \"2020 Democratic Nominee\"\n    }, {\n      contractName: \"2020 Iowa Dem caucus winner\"\n    }, {\n      contractName: \"2020 NH Dem primary winner\"\n    }, {\n      contractName: \"2020 Democratic VP nominee\"\n    }, {\n      contractName: \"Which of these Dems drops out next\"\n    }];\n    return React.createElement(\"div\", {\n      className: \"eventContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slideContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        progress,\n        setCollapsibleElement,\n        range\n      }) => React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"EventBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dateContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.props.eventDatas.Date), React.createElement(\"div\", {\n        className: \"contentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"headlinesContainer\",\n        onClick: toggle,\n        ref: this.child,\n        onChange: this.onClick(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.props.eventDatas.Headlines), React.createElement(\"div\", {\n        className: \"subtitleContainer\",\n        onClick: this.props.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.props.eventDatas.SubtitleText))), React.createElement(\"div\", {\n        className: \"inRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(SlideToggle, {\n        toggleEvent: this.state.toggleEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, console.log('this.state.toggleEvent', this.state.toggleEvent), React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(RelatedMarkets, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), this.props.eventDatas.firstMarket ? React.createElement(LiveMarkets, {\n        mId1Title: this.props.eventDatas.firstMarket // key={index} \n        // theToggle={!toggle}\n        ,\n        marketId: this.props.eventDatas.firstMarket,\n        marketIndex: this.props.eventDatas.firstMarketIndex,\n        contractName: this.props.eventDatas.firstMarketName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }) : null, this.props.eventDatas.secondMarket ? React.createElement(LiveMarkets, {\n        mId1Title: this.props.eventDatas.secondMarket // key={index} \n        // theToggle={!toggle}\n        ,\n        marketId: this.props.eventDatas.secondMarket,\n        marketIndex: this.props.eventDatas.secondMarketIndex,\n        contractName: this.props.eventDatas.secondMarketName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }) : null)))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EventObj;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/EventObj/EventObj.js"],"names":["React","SlideToggle","button","RelatedMarkets","getContractIds","LiveMarkets","LiveContracts","EventObj","Component","constructor","props","onClick","console","log","onToggle","setState","toggleEvent","Date","now","markets","eventDatas","child","createRef","state","active","bind","render","relevantMarkets","contractName","toggle","progress","setCollapsibleElement","range","Headlines","SubtitleText","firstMarket","firstMarketIndex","firstMarketName","secondMarket","secondMarketIndex","secondMarketName"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAAQC,cAAR,QAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAGA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAclBC,OAdkB,GAcR,MAAM;AACd,WAAKP,cAAL;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAGD,KAnBiB;;AAAA,SAsBlBC,QAtBkB,GAsBP,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEC,IAAI,CAACC,GAAL;AAAf,OAAd;AACD,KAxBiB;;AAAA,SA0BlBC,OA1BkB,GA0BR,KAAKT,KAAL,CAAWU,UAAX,CAAsBD,OA1Bd;AAEhB,SAAKE,KAAL,GAAarB,KAAK,CAACsB,SAAN,EAAb;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAG,IADF;AAEPR,MAAAA,WAAW,EAAE;AAFN,KAAX;AAME,SAAKZ,cAAL,GAAsB,KAAKA,cAAL,CAAoBqB,IAApB,CAAyB,IAAzB,CAAtB;AAEH;;AAgBHC,EAAAA,MAAM,GAAG;AAID,UAAMC,eAAe,GAAG,CACpB;AACIC,MAAAA,YAAY,EAAG;AADnB,KADoB,EAIpB;AACIA,MAAAA,YAAY,EAAG;AADnB,KAJoB,EAOpB;AACIA,MAAAA,YAAY,EAAG;AADnB,KAPoB,EAUpB;AACIA,MAAAA,YAAY,EAAG;AADnB,KAVoB,EAapB;AACIA,MAAAA,YAAY,EAAG;AADnB,KAboB,CAAxB;AAqBN,WAEF;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAE,GADV;AAEA,MAAA,SAAS,MAFT;AAIA,MAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,MADO;AAEPC,QAAAA,QAFO;AAGPC,QAAAA,qBAHO;AAIPC,QAAAA;AAJO,OAAD,KAOJ;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKtB,KAAL,CAAWU,UAAX,CAAsBH,IADvB,CADA,EAIA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,OAAO,EAAEY,MAA7C;AAAqD,QAAA,GAAG,EAAE,KAAKR,KAA/D;AAAsE,QAAA,QAAQ,EAAE,KAAKV,OAAL,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKD,KAAL,CAAWU,UAAX,CAAsBa,SAFvB,CADA,EAMA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWmB,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKnB,KAAL,CAAWU,UAAX,CAAsBc,YAFvB,CANA,CAJA,CAFA,EAsBA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGM,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAWP,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,KAAKU,KAAL,CAAWP,WAAjD,CADL,EAEN;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAEe,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKH,KAAKrB,KAAL,CAAWU,UAAX,CAAsBe,WAAtB,GAIG,oBAAC,WAAD;AACA,QAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWU,UAAX,CAAsBe,WADjC,CAIA;AACA;AALA;AAMA,QAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWU,UAAX,CAAsBe,WANhC;AAOA,QAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWU,UAAX,CAAsBgB,gBAPnC;AAQA,QAAA,YAAY,EAAE,KAAK1B,KAAL,CAAWU,UAAX,CAAsBiB,eARpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJH,GAkBO,IAvBJ,EA4BG,KAAK3B,KAAL,CAAWU,UAAX,CAAsBkB,YAAtB,GAED,oBAAC,WAAD;AAEA,QAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWU,UAAX,CAAsBkB,YAFjC,CAGA;AACA;AAJA;AAKA,QAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWU,UAAX,CAAsBkB,YALhC;AAMA,QAAA,WAAW,EAAE,KAAK5B,KAAL,CAAWU,UAAX,CAAsBmB,iBANnC;AAOA,QAAA,YAAY,EAAE,KAAK7B,KAAL,CAAWU,UAAX,CAAsBoB,gBAPpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,GAaC,IAzCJ,CAFM,CAHN,CAtBA,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CAFE;AA2GA;;AAjKqC;;AAmKvC,eAAejC,QAAf","sourcesContent":["/* \n\n\n<LiveMarkets\n            contractName=\"2020 Iowa Dem caucus winner\"\n             />\n            <LiveMarkets \n            contractName=\"2020 NH Dem primary winner\"\n            />\n            <LiveMarkets \n            contractName=\"2020 Democratic VP nominee\"\n            />\n            <LiveMarkets \n            contractName=\"Which of these Dems drops out next\"\n            />\n          \n\n              \n\n\n\n\n*/\n\n\nimport React from 'react';\nimport './EventObj.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport button from 'react';\nimport RelatedMarkets from '../RelatedMarkets/RelatedMarkets'\nimport {getContractIds} from '../LiveMarkets/LiveMarkets'\nimport LiveMarkets from '../LiveMarkets/LiveMarkets'\nimport LiveContracts from '../LiveContracts/LiveContracts'\n\n\nclass EventObj extends React.Component {\n  constructor(props){\n    super(props);\n    this.child = React.createRef();\n\n    this.state={\n        active : true,\n        toggleEvent: 0,\n\n    }\n\n      this.getContractIds = this.getContractIds.bind(this);\n    \n  }\n\n  onClick = () => {\n    this.getContractIds();\n    console.log(' ðŸ‘†hit the button in the parent');\n   \n    \n  }\n\n\n  onToggle = () => {\n    this.setState({ toggleEvent: Date.now() });\n  };\n\n  markets = this.props.eventDatas.markets\n\nrender() {\n\n  \n\n        const relevantMarkets = [\n            {\n                contractName : \"2020 Democratic Nominee\",\n            },\n            {\n                contractName : \"2020 Iowa Dem caucus winner\",\n            },\n            {\n                contractName : \"2020 NH Dem primary winner\",\n            },\n            {\n                contractName : \"2020 Democratic VP nominee\",\n            },\n            {\n                contractName : \"Which of these Dems drops out next\",\n            },\n        ]\n\n         \n    \n\n  return (\n\n<div className=\"eventContainer\">\n\n    <div className=\"slideContent\">\n    <SlideToggle\n    duration={300}\n    collapsed\n    \n    render={({\n      toggle,\n      progress,\n      setCollapsibleElement,\n      range,\n    }) => (\n\n        <div className=\"\">\n\n        <div className=\"EventBox\" >\n        <div className=\"dateContainer\">\n        {this.props.eventDatas.Date}\n        </div>\n        <div className=\"contentContainer\">\n        <div className=\"headlinesContainer\" onClick={toggle} ref={this.child} onChange={this.onClick()} >\n    \n        {this.props.eventDatas.Headlines}\n       \n        </div>\n        <div className=\"subtitleContainer\" onClick={this.props.toggle} >\n         \n        {this.props.eventDatas.SubtitleText}\n        </div>\n        </div>\n    \n    </div>\n\n\n\n        <div className=\"inRead\">\n\n              \n              <SlideToggle toggleEvent={this.state.toggleEvent}>\n                  {console.log('this.state.toggleEvent', this.state.toggleEvent)}\n        <div className=\"slide-toggle__box\" ref={setCollapsibleElement} >\n            <RelatedMarkets />\n            \n\n      {\n     this.props.eventDatas.firstMarket ?\n\n     \n\n        <LiveMarkets\n        mId1Title={this.props.eventDatas.firstMarket}\n        \n        \n        // key={index} \n        // theToggle={!toggle}\n        marketId={this.props.eventDatas.firstMarket}\n        marketIndex={this.props.eventDatas.firstMarketIndex}\n        contractName={this.props.eventDatas.firstMarketName}\n       \n        \n       \n        />\n\n          : null\n          \n          }\n            \n   \n         { this.props.eventDatas.secondMarket ?\n\n          <LiveMarkets\n      \n          mId1Title={this.props.eventDatas.secondMarket}\n          // key={index} \n          // theToggle={!toggle}\n          marketId={this.props.eventDatas.secondMarket}\n          marketIndex={this.props.eventDatas.secondMarketIndex}\n          contractName={this.props.eventDatas.secondMarketName}\n        \n         \n          />\n          : null\n             }    \n   \n\n\n        \n            \n            \n              </div>\n              </SlideToggle>\n        </div>\n        </div>\n  \n\n\n      )}\n/>\n\n    </div>\n\n    </div>\n    \n  );\n }\n}\nexport default EventObj;"]},"metadata":{},"sourceType":"module"}