{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contracts = [];\n    this.values = [];\n    this.markets = [];\n    this.json = [];\n    this.length = \"\";\n    this.state = {\n      toggleSwitch: false,\n      marketIds: [],\n      contractIds: [],\n      allContracts: [],\n      contractsAndValues: [],\n      jsonObj: [],\n      objLength: []\n    }; // END OF STATE\n  } // END OF CONSTRUCTOR\n\n\n  //Notes: \n  // Need to Get all Market Ids thru props\n  // Need to get all Contracts where Market Ids exist\n  // Need to get all Values where Contract Ids exist \n  // One JSON object to map Contracts and Values\n  // Loop thru JSON, render values in <LiveContracts /> component\n  componentDidMount() {\n    let marketIds = [3633, 3653];\n    let themContracts = [];\n\n    for (var i = 0; i < marketIds.length - 1; i++) {\n      const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n      themContracts.push(axios.get(rmpURL));\n    }\n\n    Promise.all(themContracts).then(response => response.map(res => console.log('res.data[0])', res.data[0]))).catch(err => console.log(err));\n    console.log('themContracts', themContracts);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        setCollapsibleElement\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","LiveMarkets","Component","constructor","props","contracts","values","markets","json","length","state","toggleSwitch","marketIds","contractIds","allContracts","contractsAndValues","jsonObj","objLength","componentDidMount","themContracts","i","rmpURL","push","get","Promise","all","then","response","map","res","console","log","data","catch","err","render","toggle","setCollapsibleElement","contractName"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        toggleSwitch : false,\n        marketIds : [],\n        contractIds: [],\n        allContracts: [], \n        contractsAndValues: [],\n        jsonObj: [],\n        objLength: []\n\n\n\n    }; // END OF STATE\n\n\n\n\n\n  } // END OF CONSTRUCTOR\n\n  contracts = []\n  values = []\n  markets = []\n  json = []\n  length = \"\"\n\n\n    //Notes: \n    // Need to Get all Market Ids thru props\n    // Need to get all Contracts where Market Ids exist\n    // Need to get all Values where Contract Ids exist \n    // One JSON object to map Contracts and Values\n    // Loop thru JSON, render values in <LiveContracts /> component\n\n\n componentDidMount() {\n    let marketIds = [3633, 3653]\n    let themContracts = [];\n    for ( var i = 0; i < marketIds.length - 1; i++){\n        const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n        themContracts.push(axios.get(rmpURL));\n    }\n\n    Promise.all(themContracts).then((response) => \n        response.map(res => console.log('res.data[0])', res.data[0]))\n        ).catch((err) => console.log(err));\n        console.log('themContracts', themContracts)\n }\n\n \n\n\n\n\nrender() {\n\n\n\n \n  return (\n          \n\n<div className=\"parent\">\n             <div className=\"one\">\n                 \n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      setCollapsibleElement\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'}  > \n       \n        <div className=\"LiveMarkets\"  >\n        {this.props.contractName}\n    \n          </div>\n          <SlideToggle >\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}>\n\n\n            <MarketBlurb \n            blurb=\"PredictItâ€™s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n\n      </div>\n      )}\n    \n      />\n      </div>\n\n           \n  )\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}