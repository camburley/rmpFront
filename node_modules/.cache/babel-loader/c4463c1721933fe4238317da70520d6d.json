{"ast":null,"code":"var _jsxFileName = \"/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js\";\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts';\nimport MarketBlurb from '../MarketBlurb/MarketBlurb';\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.contracts = [];\n    this.values = [];\n    this.markets = [];\n    this.json = [];\n    this.length = \"\";\n\n    this.logState = () => {\n      console.log('hello');\n      console.log('this.state.allContracts loggedState()', this.state.allContracts);\n      let loopAllContracts = this.state.allContracts;\n      loopAllContracts.map((row, k) => {\n        if (k !== 0 && k !== 1) {\n          console.log('k', k);\n          console.log('row', row);\n          this.state.marketContracts.push(row);\n        }\n      });\n    };\n\n    this.getContractIds = () => {\n      let contractRow = this.state.allContracts[this.props.marketIndex];\n      contractRow.map((row, y) => {\n        console.log('y IN CONTRACT IDS', y);\n        console.log('row IN CONTRACT IDS', row.contract_id);\n        this.state.contractIds.push(row.contract_id);\n      });\n      console.log('this.state.loopThruTheseContracts', this.state.loopThruTheseContracts);\n      return this.fetchContractPrices();\n    };\n\n    this.fetchContractPrices = () => {\n      let contractPrices = [];\n      this.setState({\n        valuesLength: this.state.contractIds.count\n      });\n      console.log('this.state.valuesLength', this.state.valuesLength);\n\n      for (var i = 0; i < this.state.contractIds.length; i++) {\n        const rmpURL = 'https://realmoneypolls.herokuapp.com/api/value/value_list/' + this.state.contractIds[i];\n        contractPrices.push(axios.get(rmpURL)); //this.state.contractsAndValues.push(contractPrices)\n\n        console.log('contractPrices in values list loop', contractPrices);\n        console.log('this.state.contractsAndValues in values loop call', this.state.contractsAndValues[0]);\n        console.log('this.state.contractsAndValues.length', this.state.contractsAndValues.length);\n      }\n\n      Promise.all(contractPrices).then(response => console.log('response', response) + response.map((res, index) => {\n        this.state.contractsAndValues.push(res.data[0][0]);\n        console.log('res.data', res.data[0][0]);\n        console.log('this.state.contractsAndValues should be 33 and 15', this.state.contractsAndValues);\n      })).catch(err => console.log(err));\n      console.log(this.state.contractsAndValues);\n      return this.makeOneObj();\n    };\n\n    this.showLiveContracts = () => {\n      console.log('hello');\n      let names = this.state.currentNames;\n      console.log('names IN SHOW LIVE CONTRACTS', names);\n      let prices = this.state.currentPrices;\n      console.log('prices IN SHOW LIVE CONTRACTS', prices);\n    };\n\n    this.makeOneObj = () => {\n      console.log('this.state.contractsAndValues in makeOneObj()💯 ', this.state.contractsAndValues);\n      console.log('this.state.allContracts in makeOneObj()🗞 ', this.state.allContracts);\n      console.log('this.state.allContracts.length in makeOneObj()📐 ', this.state.allContracts.length);\n      console.log('this.state.marketContracts in makeOneObj 👻', this.state.marketContracts);\n      let begin = this.state.allContracts.length / 2;\n      let names = this.state.allContracts[this.props.marketIndex];\n      let prices = this.state.contractsAndValues;\n      this.setState({\n        currentNames: names\n      });\n      this.setState({\n        currentPrices: prices\n      });\n      let together = {\n        'names': names,\n        'prices': prices\n      };\n      console.log('together', together);\n      this.state.almostThere.push(together);\n      this.setState({\n        loopThruTheseContracts: this.state.almostThere[0]\n      });\n      console.log('this.state.loopThruTheseContracts FROM Almost there', this.state.loopThruTheseContracts);\n      return;\n    };\n\n    this.demValues = (names, prices, i) => {\n      console.log('names', names);\n      console.log('prices', prices);\n      return React.createElement(LiveContracts, {\n        contractName: names[i].name,\n        contractPrice: prices[i].best_buy_yes_offer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      });\n    };\n\n    this.getLoopData = () => {\n      const contracts = this.state.loopThruTheseContracts;\n      const names = contracts.names;\n      const prices = contracts.prices;\n      const arr = [];\n\n      for (var i = 0; i < contracts.names.length; i++) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, this.renderIt(names, prices, i));\n      }\n    };\n\n    this.renderIt = (names, prices, i) => {\n      this.state.jsonObj.map((row, x) => {\n        console.log('row.name', row.name);\n        console.log('x', x);\n        return React.createElement(LiveContracts, {\n          contractName: names.name,\n          contractAvatar: names.image,\n          contractPrice: prices.contractPrice.best_buy_yes_offer,\n          contractChange: prices.contractPrice.last_trade_price - row.contractPrice.last_close_price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      toggleSwitch: false,\n      marketIds: this.props.markets,\n      contractIds: [],\n      allContracts: [],\n      marketContracts: [],\n      contractsAndValues: [],\n      onlyValues: [],\n      jsonObj: [],\n      valuesLength: \"\",\n      objLength: [],\n      almostThere: [],\n      currentNames: [],\n      currentPrices: [],\n      loopThruTheseContracts: []\n    }; // END OF STATE\n  } // END OF CONSTRUCTOR\n\n\n  //Notes: \n  // Need to Get all Market Ids thru props\n  // Need to get all Contracts where Market Ids exist\n  // Need to get all Values where Contract Ids exist \n  // One JSON object to map Contracts and Values\n  // Loop thru JSON, render values in <LiveContracts /> component\n  componentDidMount() {\n    let marketIds = ['3633', '3653'];\n    console.log('this.state.marketIds', this.state.marketIds);\n    let themContracts = [];\n\n    for (var i = 0; i < marketIds.length; i++) {\n      const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n      themContracts.push(axios.get(rmpURL));\n      this.state.allContracts.push(themContracts);\n      console.log('themContracts', themContracts);\n    }\n\n    Promise.all(themContracts).then(response => console.log('response', response) + response.map((res, index) => {\n      this.state.allContracts.push(res.data[0]);\n      console.log('this.state.allContracts.push(res.data[0])', this.state.allContracts);\n      this.getContractIds();\n    })).catch(err => console.log(err));\n  }\n\n  checkMarketContracts() {\n    console.log('this.state.marketContracts checkMarketContracts()', this.state.marketContracts);\n  }\n\n  checkContractIds() {\n    console.log('this.state.contractIds.length', this.state.contractIds.length);\n  }\n\n  multipleCalls() {}\n\n  render() {\n    let someshit = this.state.loopThruTheseContracts;\n    console.log('someshit', someshit);\n    console.log(this.state.loopThruTheseContracts);\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.getContractIds(),\n      onChange: () => this.showLiveContracts(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \" refresh real-time prices \")), React.createElement(SlideToggle, {\n      duration: 300,\n      collapsed: true,\n      render: ({\n        toggle,\n        setCollapsibleElement\n      }) => React.createElement(\"div\", {\n        className: toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive',\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LiveMarkets\",\n        onClick: this.getLoopData,\n        onChange: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, this.props.contractName), React.createElement(SlideToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slide-toggle__box\",\n        ref: setCollapsibleElement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, this.getLoopData, React.createElement(MarketBlurb, {\n        blurb: \"PredictIt\\u2019s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\",\n        blurbLink: \" here.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LiveMarkets;","map":{"version":3,"sources":["/Users/cam/real_money_polls/src/components/LiveMarkets/LiveMarkets.js"],"names":["React","SlideToggle","LiveContracts","MarketBlurb","axios","LiveMarkets","Component","constructor","props","contracts","values","markets","json","length","logState","console","log","state","allContracts","loopAllContracts","map","row","k","marketContracts","push","getContractIds","contractRow","marketIndex","y","contract_id","contractIds","loopThruTheseContracts","fetchContractPrices","contractPrices","setState","valuesLength","count","i","rmpURL","get","contractsAndValues","Promise","all","then","response","res","index","data","catch","err","makeOneObj","showLiveContracts","names","currentNames","prices","currentPrices","begin","together","almostThere","demValues","name","best_buy_yes_offer","getLoopData","arr","renderIt","jsonObj","x","image","contractPrice","last_trade_price","last_close_price","toggleSwitch","marketIds","onlyValues","objLength","componentDidMount","themContracts","checkMarketContracts","checkContractIds","multipleCalls","render","someshit","toggle","setCollapsibleElement","contractName"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './LiveMarkets.scss';\nimport SlideToggle from 'react-slide-toggle';\nimport LiveContracts from '../LiveContracts/LiveContracts'\nimport MarketBlurb from '../MarketBlurb/MarketBlurb'\nimport axios from 'axios';\n\nclass LiveMarkets extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n        toggleSwitch : false,\n        marketIds : this.props.markets,\n        contractIds: [],\n        allContracts: [],\n        marketContracts: [],\n        contractsAndValues: [],\n        onlyValues: [],\n        jsonObj: [],\n        valuesLength: \"\",\n        objLength: [], \n        almostThere: [],\n        currentNames: [],\n        currentPrices:[],\n        loopThruTheseContracts: []\n\n\n\n    }; // END OF STATE\n\n\n\n\n\n  } // END OF CONSTRUCTOR\n\n  contracts = []\n  values = []\n  markets = []\n  json = []\n  length = \"\"\n\n\n    //Notes: \n    // Need to Get all Market Ids thru props\n    // Need to get all Contracts where Market Ids exist\n    // Need to get all Values where Contract Ids exist \n    // One JSON object to map Contracts and Values\n    // Loop thru JSON, render values in <LiveContracts /> component\n\n\n\n  componentDidMount() {\n  \n    let marketIds = ['3633', '3653']\n    console.log('this.state.marketIds', this.state.marketIds)\n\n    let themContracts = [];\n\n    for ( var i = 0; i < marketIds.length; i++){\n        const rmpURL = 'https://realmoneypolls.herokuapp.com/api/contract/contract_list/' + marketIds[i];\n        themContracts.push(axios.get(rmpURL));\n        this.state.allContracts.push(themContracts)\n        console.log('themContracts', themContracts)\n    }\n\n    Promise.all(themContracts).then((response) => \n    console.log('response', response) +\n    \n        response.map((res, index)=> {\n            this.state.allContracts.push(res.data[0])\n            console.log('this.state.allContracts.push(res.data[0])', this.state.allContracts)\n            this.getContractIds();\n        }\n        )).catch((err) => console.log(err));\n        \n }\n\n \n \nlogState = () => {\n    console.log('hello')\n    console.log('this.state.allContracts loggedState()', this.state.allContracts)\n\n    let loopAllContracts = this.state.allContracts\n\n    loopAllContracts.map((row, k) => {\n        if (k !== 0 && k !== 1){\n            console.log('k', k)\n            console.log('row', row)\n            this.state.marketContracts.push(row)\n\n        }\n    })\n}\n\ncheckMarketContracts(){\n    console.log('this.state.marketContracts checkMarketContracts()', this.state.marketContracts)\n}\n\ngetContractIds = () => {\n\n\n    let contractRow = this.state.allContracts[this.props.marketIndex]\n    contractRow.map((row, y) => {\n        console.log('y IN CONTRACT IDS', y)\n        console.log('row IN CONTRACT IDS', row.contract_id)\n        this.state.contractIds.push(row.contract_id)\n    })\n\n    console.log('this.state.loopThruTheseContracts', this.state.loopThruTheseContracts)\n\n    \n    return this.fetchContractPrices();\n\n}\n\ncheckContractIds() {\n    console.log('this.state.contractIds.length', this.state.contractIds.length)\n}\n\n fetchContractPrices = () => {\n\n        let contractPrices = [];\n        this.setState({valuesLength: this.state.contractIds.count})\n        console.log('this.state.valuesLength', this.state.valuesLength)\n\n\n        for ( var i = 0; i < this.state.contractIds.length; i++){\n            const rmpURL = 'https://realmoneypolls.herokuapp.com/api/value/value_list/' + this.state.contractIds[i];\n            contractPrices.push(axios.get(rmpURL));\n            //this.state.contractsAndValues.push(contractPrices)\n            console.log('contractPrices in values list loop', contractPrices)\n            console.log('this.state.contractsAndValues in values loop call', this.state.contractsAndValues[0])\n            console.log('this.state.contractsAndValues.length', this.state.contractsAndValues.length)\n            \n        }\n    \n        Promise.all(contractPrices).then((response) => \n        console.log('response', response) +\n        \n            response.map((res, index)=> {\n                \n                this.state.contractsAndValues.push(res.data[0][0])\n                console.log('res.data', res.data[0][0])\n                console.log('this.state.contractsAndValues should be 33 and 15', this.state.contractsAndValues)\n            \n            } \n                \n            \n            )).catch((err) => console.log(err));\n\n            console.log(this.state.contractsAndValues)\n            return this.makeOneObj();\n            \n    \n}\n\n\n\n\n\nshowLiveContracts = () => {\n     console.log('hello')\n    let names = this.state.currentNames\n    console.log('names IN SHOW LIVE CONTRACTS', names)\n    let prices = this.state.currentPrices\n    console.log('prices IN SHOW LIVE CONTRACTS', prices)\n\n\n\n\n}\n\n\nmultipleCalls() {\n    \n}\n\n makeOneObj = () => {\n\n    console.log('this.state.contractsAndValues in makeOneObj()💯 ', this.state.contractsAndValues)\n    console.log('this.state.allContracts in makeOneObj()🗞 ', this.state.allContracts)\n    console.log('this.state.allContracts.length in makeOneObj()📐 ', this.state.allContracts.length)\n    console.log('this.state.marketContracts in makeOneObj 👻', this.state.marketContracts)\n   \n    let begin = (this.state.allContracts.length / 2)\n    let names = this.state.allContracts[this.props.marketIndex]\n    let prices = this.state.contractsAndValues\n    this.setState({ currentNames: names})\n    this.setState({ currentPrices: prices})\n\n    let together = {'names': names, 'prices': prices}\n    console.log('together', together)\n    this.state.almostThere.push(together)\n    this.setState({ loopThruTheseContracts: this.state.almostThere[0]})\n    console.log('this.state.loopThruTheseContracts FROM Almost there', this.state.loopThruTheseContracts)\n\n    return;\n\n   \n\n\n}\n\ndemValues = (names, prices, i) =>{\n    console.log('names', names)\n    console.log('prices', prices)\n\n   return <LiveContracts  contractName={names[i].name} contractPrice={prices[i].best_buy_yes_offer}\n        \n    />\n    \n}\n\n\ngetLoopData = () => {\n\n    const contracts = this.state.loopThruTheseContracts\n    const names =  contracts.names\n    const prices = contracts.prices\n\n    const arr = [];\nfor (var i = 0; i < contracts.names.length; i++){       \nreturn <div>{this.renderIt(names, prices, i)}</div>\n    \n}\n\n\n}\n\n\n\n\nrenderIt = (names, prices, i) => {\n\n    this.state.jsonObj.map((row, x) => {\n        console.log('row.name', row.name)\n        console.log('x', x)\n\n        return    <LiveContracts \n          \n            contractName={names.name}\n            contractAvatar={names.image}\n            contractPrice={prices.contractPrice.best_buy_yes_offer}\n            contractChange={(prices.contractPrice.last_trade_price - row.contractPrice.last_close_price)}\n            \n            />\n            \n        })\n}\n\n\nrender() {\n\nlet someshit = this.state.loopThruTheseContracts\nconsole.log('someshit', someshit) \nconsole.log(this.state.loopThruTheseContracts)\n\n  return (\n          \n\n<div className=\"parent\">\n             <div className=\"one\" >\n             <button onClick={() => this.getContractIds()} onChange={() => this.showLiveContracts()}> refresh real-time prices </button>\n             \n             </div>\n\n    <SlideToggle\n    duration={300}\n    collapsed\n    render={({\n      toggle,\n      setCollapsibleElement\n    }) => (\n\n        <div className={ toggle ? 'LiveMarketBox' : 'LiveMarketBoxActive'} onClick={toggle}> \n       \n        <div className=\"LiveMarkets\" onClick={this.getLoopData} onChange={toggle}>\n        {this.props.contractName} \n        \n    \n          </div>\n          <SlideToggle >\n              <div className=\"slide-toggle__box\" ref={setCollapsibleElement}  >\n              \n            \n\n\n            {this.getLoopData}\n    \n\n            \n\n            <MarketBlurb \n            blurb=\"PredictIt’s Live Market Data based on upcoming future events. These are the markets most closely associated with key events. Find market details,\"\n            blurbLink=\" here.\"\n            \n            />\n        \n        </div>\n       \n        </SlideToggle>\n\n\n      </div>\n      )}\n    \n      />\n      </div>\n\n           \n  )\n }\n}\nexport default LiveMarkets;"]},"metadata":{},"sourceType":"module"}